# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
[
    {
	object => [],
	compute_params => sub {
	    shift->put(object => class()->new());
	    return shift;
	},
	compute_return => sub {
	    my($case, $params, $method) = @_;
	    return [$case->get('object')->build_for_internal_load_rows(
		Bivio::Biz::Model->new(req(), 'RealmFileList')
		    ->internal_get_sql_support,
	    )];
	},

    } => [
        union_hack => [
	    [class()->new->where(class()->IN('RealmFile.realm_file_id', [1]))]
		=> ['realm_file_t.realm_file_id IN (?)', [1]],
	    [
		class()->new->where(class()->IN('RealmFile.realm_file_id', [1])),
		class()->new->select('User.user_id')
		    ->from('User')
		    ->where(class()->EQ('User.first_name', ['x']))
	    ] => ['realm_file_t.realm_file_id IN (?) UNION SELECT user_t.user_id FROM user_t WHERE user_t.first_name=?', [1, 'x']],
	],
    ],
];
