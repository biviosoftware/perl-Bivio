#!/bin/sh
#
# $Id$
#
# b-db-backup-adhoc [db-login] [db-name] [backup-host] [keep-days]
#

DB_LOGIN=${1:-bivio/bivio}
DB_NAME=${2:-SOC}
BACKUP_HOST=${3:-s2b}
KEEP_DAYS=${4:-6}

HOST=`hostname`
HOST=`expr $HOST : '\([^\.]*\)\.' '|' $HOST`

. /etc/ssh2/ssh2_agent

[ -d /home/bkp ] || mkdir /home/bkp
cd /home/bkp
ts=$(date +%Y%m%d%H%M%S)
mkdir $ts
cd $ts

# DON'T backup lock_t, because it is temporal.

# INSTRUMENT_T is needed separately to allow a proper import of the two other dumps
$ORACLE_HOME/bin/exp ${DB_LOGIN}@$DB_NAME grants=n compress=y indexes=n rows=y constraints=n statistics=none feedback=0 consistent=y file=./$ts-instrument.dmp 'tables=(INSTRUMENT_T)'

# Consistent
$ORACLE_HOME/bin/exp ${DB_LOGIN}@$DB_NAME grants=n compress=y indexes=n rows=y constraints=n statistics=none feedback=0 consistent=y file=./$ts-realm.dmp 'tables=(ADDRESS_T,CLUB_T,CONNECT_SURVEY_T,DB_UPGRADE_T,EMAIL_T,ENTRY_T,FILE_QUOTA_T,FILE_T,INSTITUTION_T,JAPAN_SURVEY_T,MAIL_T,MEMBER_ALLOCATION_T,MEMBER_ENTRY_T,PHONE_T,PREFERENCES_T,REALM_ACCOUNT_ENTRY_T,REALM_ACCOUNT_T,REALM_DECOR_T,REALM_INSTRUMENT_ENTRY_T,REALM_INSTRUMENT_T,REALM_INSTRUMENT_VALUATION_T,REALM_INVITE_T,REALM_OWNER_T,REALM_ROLE_T,REALM_TRANSACTION_T,REALM_USER_T,TAX_1065_T,TAX_ID_T,TAX_K1_T,USER_T,VISITOR_T)'

# Not consistent, because we only update once per day
$ORACLE_HOME/bin/exp ${DB_LOGIN}@$DB_NAME grants=n compress=y indexes=n rows=y constraints=n statistics=none feedback=0 consistent=n file=./$ts-mgfs.dmp 'tables=(MGFS_BALANCE_SHEET_T,MGFS_CASH_FLOW_T,MGFS_COMPANY_BOARD_T,MGFS_COMPANY_SEGMENT_T,MGFS_COMPANY_T,MGFS_DAILY_QUOTE_T,MGFS_DOWNLOAD_T,MGFS_FUNDAMENTAL_T,MGFS_INCOME_STATEMENT_T,MGFS_INSTRUMENT_T,MGFS_SECONDARY_SIC_T,MGFS_SIC_CODE_T,MGFS_SPLIT_T,MGFS_SP_INDUSTRY_T)'

echo Compressing export dump files
gzip *.dmp

# Return to /home/bkp
cd ..

if [ "$BACKUP_HOST" != "NONE" ]; then
    echo Transferring to $BACKUP_HOST
    ssh $BACKUP_HOST "[ -d /home/bkp/$DB_NAME ] || mkdir /home/bkp/$DB_NAME"
    scp -pr $ts ${BACKUP_HOST}:/home/bkp/$DB_NAME
fi

# Keep a few days worth of backup online
thin=`ls -dt [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9] | tail +$KEEP_DAYS`
if [ "$thin" ]; then
    echo Thinning backups on $HOST, removing $thin
    rm -rf $thin
fi
