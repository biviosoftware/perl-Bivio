# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
use lib '.';
my($d) = Bivio::IO::File->mkdir_p(
    Bivio::IO::File->rm_rf(
	Bivio::IO::File->absolute_path('Reload')));
my($pm) = sub {
    my($module, $return) = @_;
    write_file("$d/$module.pm", <<"EOF");
package Reload::$module;
sub value {'$return'}
1;
EOF
    return "Reload::$module";
};
foreach my $c (qw(BConf T1 T2)) {
    $pm->($c, 'init');
    class("Reload::$c");
}
Request()->initialize_fully;
[
    class() => [
	{
	    method => 'handler',
	    compute_params => sub {
		my($case, $params) = @_;
		sleep(1);
		return [map($pm->(@$_), @$params)]
	    },
	    compute_return => sub {
		return [map($_->value, @{shift->get('params')})];
	    },
	} => [
	    [] => [],
	    [[T1 => 3]] => [3],
	    [[T1 => 3], [T2 => 4]] => [3, 4],
	    [] => [],
	],
    ],
];


