# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
req()->set_realm_and_user(qw(demo demo));
my($dir) = '/search-text/';
model('RealmFile')->delete_deep({path => $dir});
[
    class() => [
	{
	    method => 'parse',
	    compute_params => sub {
		my(undef, $params) = @_;
		return [model('RealmFile')->create_with_content({
		    path => ($params->[1] || $dir) . $params->[0],
		}, read_file('RealmFile/' . $params->[0]))];
	    },
	    check_return => sub {
		my(undef, undef, $expect) = @_;
		return @$expect == 2 ? [@$expect, "some text\n"] : $expect;
	    },
	    compute_return => sub {
		my(undef, $actual) = @_;
		return [$actual->[0] ? map(
		    ref($_) ? $$_ : $_,
		    @{$actual->[0]}{qw(type title text)},
		) : ()];
	    },
	} => [
	    't.txt' => ['text/plain', ''],
	    't.csv' => ['text/csv', '', "some,text\n"],
	    't.html' => ['text/html', 'TITLE'],
	    't.bwiki' => ['text/plain', 'TITLE'],
	    't.eml' => ['message/rfc822', 'TITLE', <<'EOF'],
subject: TITLE
to: hello
from: John Doe <john@example.com>

some text
EOF
	    't.gif' => [],
	    [TextFile => '/Wiki/'] => ['text/plain', 'TextFile'],
	    TextFile => ['text/plain', ''],
	    BinaryFile => [],
	    [BinaryFile => '/Wiki/'] => [],
	],
    ],
];
