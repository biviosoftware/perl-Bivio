# Copyright (c) 2004 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
my($sendmail_out) = 'sendmail.tmp';
my($errors_to_user) = 'postmaster';
config({
    'Bivio::Mail::Common' => {
        errors_to => $errors_to_user,
        sendmail => "perl -w mock-sendmail.PL $sendmail_out ",
    },
});
my($errors_from_email, $errors_from_user) = class()->user_email(req());
[
    class() => [
        {
            method => 'send',
            compute_return => sub {
                return [${Bivio::IO::File->read($sendmail_out)}];
            },
        } => [
            ['a@a.a', <<'IN', 0, 'b@b.b', req()] => <<'OUT',
s: 1

b
IN
From: b@b.b
Recipients: a@a.a
X-Bivio-Test-Recipient: a@a.a
s: 1

b
OUT
            ['a@a.a', <<'IN', 0, undef, req()] => <<'OUT',
x
IN
Recipients: a@a.a
X-Bivio-Test-Recipient: a@a.a
x
OUT
            ['a@a.a', <<'IN', 1, undef, req()] => <<'OUT',
zz
IN
Recipients: a@a.a
X-Bivio-Test-Recipient: a@a.a
z
OUT
            ['a@a.a', <<"IN", 0, 'b@b.b', req()] => <<"OUT",
\x{1F928}
IN
Recipients: $errors_to_user
X-Bivio-Test-Recipient: $errors_to_user
From: "$errors_from_user" <$errors_from_email>
To: $errors_to_user
Subject: ERROR: unable to send mail
Sender: "-" <$errors_from_user>
X-Bivio-Test-Recipient: $errors_to_user
Auto-Submitted: auto-replied

Error while trying to send message to a\@a.a:

    (reason: I/O error)

-------------------- Original Message Follows ----------------
(original message send failed with reported reason)
OUT
        ],
    ],
];
