# Copyright (c) 2006 bivio Software, Inc.  All rights reserved.
# $Id$
Request();
[
    sub {req()} => [
	{
	    method => 'set_realm',
	    compute_return => sub {
		return [$_[1]->[0]->get('type')->get_name];
	    },
	} => [
	    [undef] => 'GENERAL',
	    demo => 'USER',
	    fourem => 'FORUM',
	    1 => 'GENERAL',
	    2 => 'USER',
	],
	with_realm => [
	    [fourem => sub {req(qw(auth_realm owner_name))}] => 'fourem',
	    [fourem => sub {die('here we go')}] => qr{DIE:.*here we go},
	],
	with_user => [
	    [root => sub {req(qw(auth_user name))}] => 'root',
	    [demo => sub {die('here we go')}] => qr{DIE:.*here we go},
	],
	map_user_realms => [
	    [sub {$_->{'RealmOwner.name'}}] => [[]],
	],
	set_user => [
	    btest_read => not_die(),
	],
	map_user_realms => [
	    [sub {$_->{'RealmOwner.name'}}] => [[qw(btest_read fourem fourem-sub1 fourem-sub1-1 fourem-sub2)]],
	    [sub {$_->{'RealmOwner.name'}},
	     {'RealmOwner.realm_type' => Bivio::Auth::RealmType->USER}] 
		=> [[qw(btest_read)]],
	],
    ],
];
