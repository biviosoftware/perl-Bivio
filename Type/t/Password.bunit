# Copyright (c) 2005-2023 bivio Software, Inc.  All rights reserved.
Type();
my($_F) = b_use('IO.File');
my($_PHC) = b_use('Type.PasswordHashCrypt');
my($_PH1) = b_use('Type.PasswordHashHMACSHA1');
my($_PH512) = b_use('Type.PasswordHashHMACSHA512');
my($corpus_path) = $_F->temp_file(req());
$_F->write($corpus_path, <<'EOF');
weakpass1
weakpass2
EOF
config({
    'Bivio::Type::Password' => {
        weak_regex => [qr/bivio/i],
        weak_corpus_path => $corpus_path,
    },
});
[
    [] => [
        INVALID => 'xx',
        OTP_VALUE => 'otp',
        encrypt => [
            ['is some pass'] => $_PH512->REGEX,
            ['is some pass', $_PH512] => $_PH512->REGEX,
            ['is some pass', $_PH1] => $_PH1->REGEX,
            ['is some pass', $_PHC] => $_PHC->REGEX,
        ],
        from_literal => [
            q(12345) => [undef, Bivio::TypeError->TOO_SHORT],
            q(1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456)
                => [undef, Bivio::TypeError->TOO_LONG],
            '123456' => qr/[\w]+/,
        ],
        is_equal => [
            [
                '$hmac_sha512$IVLy5gJ115dRMgE8$UAsdU2JVtrUBoqfhJFgPSDHvQ1tq+cL7VsJqwsEOm8Ow0YXX5w8NYoXmhhc2tacz+YfJM2ErQLHTI/ykwAvrAw',
                'is some pass',
            ] => 1,
            [
                '$hmac_sha512$IVLy5gJ115dRMgE8$UAsdU2JVtrUBoqfhJFgPSDHvQ1tq+cL7VsJqwsEOm8Ow0YXX5w8NYoXmhhc2tacz+YfJM2ErQLHTI/ykwAvrAw',
                '123456',
            ] => 0,
            [
                '$hmac_sha512$IVLy5gJ115dRMgE8$UAsdU2JVtrUBoqfhJFgPSDHvQ1tq+cL7VsJqwsEOm8Ow0YXX5w8NYoXmhhc2tacz+YfJM2ErQLHTI/ykwAvrAw',
                undef,
            ] => 0,
            ['KLySKlfjmX+gekfVh6WrM8jyJypNo', 'is some pass'] => 1,
            ['KLySKlfjmX+gekfVh6WrM8jyJypNo', '123456'] => 0,
            ['KLySKlfjmX+gekfVh6WrM8jyJypNo', undef] => 0,
            ['kzltIzEfODKJg', 'abcdef'] => 1,
            ['kzltIzEfODKJg', '123456'] => 0,
            ['kzltIzEfODKJg', undef] => 0,
            [undef, 'abcdef'] => 0,
            # Special case when both are undefined.
            [undef, undef] => 0,
        ],
        is_otp => [
            q(otp) => 1,
            q(not otp) => 0,
        ],
        is_password => 1,
        is_secure_data => 1,
        is_valid => [
            'KLySKlfjmX+gekfVh6WrM8jyJypNo' => 1,
            kzltIzEfODKJg => 1,
            abcdefg => 0,
            otp => 1,
            xx => 0,
        ],
        needs_upgrade => [
            '$hmac_sha512$IVLy5gJ115dRMgE8$UAsdU2JVtrUBoqfhJFgPSDHvQ1tq+cL7VsJqwsEOm8Ow0YXX5w8NYoXmhhc2tacz+YfJM2ErQLHTI/ykwAvrAw' => 0,
            'otp' => 0,
            'KLySKlfjmX+gekfVh6WrM8jyJypNo' => 1,
            'kzltIzEfODKJg' => 1,
            'invalid hash' => DIE(),
        ],
        validate_clear_text => [
            'shrtpw' => 'TOO_SHORT',
            ['10000001', '10000001', 'somerealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['somerealmname', '10000001', 'somerealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['fooemail@example.com', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['fooemail', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['fooemailexamplecom', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['foobivio', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['weakpass1', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['weakpass2', '10000001', 'foorealmname', ['fooemail@example.com']] => 'WEAK_PASSWORD',
            ['password', '10000001', 'foorealmname', ['fooemail@example.com']] => undef,
        ],
    ],
];
