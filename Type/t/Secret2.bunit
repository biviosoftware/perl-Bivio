# $Id$
# Copyright (c) 2002-2012 bivio Software, Inc.  All rights reserved.
Type();
options({
    compute_return => sub {
	my($case, $actual) = @_;
	my($reverse) = $case->get('method');
	$reverse =~ s/encrypt/decrypt/;
	assert_equals(
	    $reverse =~ /hex/ ? qr{^[0-9a-f]+$} : qr{[G-Z]},
	    $actual->[0],
	) if defined($actual->[0]);
	return [$case->get('object')->$reverse($actual->[0])];
    },
});
my($same) = sub {
    return map(
	([$_] => [$_]),
	@_,
    );
};
[
    map(
	($_ => [
	    $same->(
		undef,
		'some string',
		'',
		0,
		1,
	    ),
	]),
	qw(encrypt_hex encrypt_http_base64),
    ),
];
