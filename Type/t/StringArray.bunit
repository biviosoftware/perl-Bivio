# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
Type();
options({
    compute_return => sub {
	shift;
	return [map(ref($_) eq class() ? $_->as_array : $_, @{shift(@_)})];
    },
});
[
    new => [
	[undef] => [[]],
	[''] => [[]],
	[['a']] => [['a']],
	[class()->new('a')] => [['a']],
    ],
    from_literal => [
        '' => UNDEF(),
	' ' => UNDEF(),
	[[]] => UNDEF(),
	[class()->new([])] => UNDEF(),
	'0' => [[qw(0)]],
	' a,b ' => [[qw(a b)]],
	"a,b$;c" => [['a,b', 'c']],
	[[qw(a b)]] => [[qw(a b)]],
	[class()->new([qw(a b)])] => [[qw(a b)]],
    ],
    compare_defined => [
	[class->()->new([qw(a b)]), [qw(a b)]] => 0,
	[[qw(a b)], [qw(a b)]] => 0,
	[[qw(a a)], [qw(a b)]] => -1,
	[[qw(a c)], [qw(a b)]] => 1,
	[[qw(a)], [qw(a b)]] => -1,
	[[qw(a b c)], [qw(a b)]] => 1,
	[['a', undef], ['a']] => 0,
	[['a'], ['a', '']] => 0,
	[[undef, 'a'], ['a']] => -1,
	[['', 'a'], ['a']] => -1,
	[[''], []] => 0,
    ],
    to_sql_param => [
	[] => [undef],
	[[]] => [undef],
	[[qw(a)]] => 'a',
	[[qw(a b)]] => "a$;b",
	[["a$;b"]] => DIE(),
	['a'] => DIE(),
    ],
    from_sql_column => [
	[] => [undef],
	[''] => [undef],
	['a'] => [[qw(a)]],
	"a$;b" => [[qw(a b)]],
	"$;a" => [['', 'a']],
    ],
    to_literal => [
	[] => '',
	[[]] => '',
	[[undef,undef]] => '',
	[[qw(a)]] => 'a',
	[[qw(a b)]] => 'a, b',
	[['a,b']] => DIE(),
	['a'] => DIE(),
    ],
    sort_unique => [
	[[]] => [[]],
	[[qw(a b)]] => [[qw(a b)]],
	[[qw(b a a)]] => [[qw(a b)]],
    ],
];
