# Copyright (c) 2008 bivio Software, Inc.  All Rights Reserved.
# $Id$
Type();
my($last_msg);
class()->set_printer(sub {
    $last_msg = shift;
    return;
});
options({
    compute_return => sub {
	chomp(my $res = $last_msg);
	$last_msg = undef;
	return [$res];
    },
});
[
    {
	method => 'calling_context',
	comparator => 'nested_contains',
	compute_return => sub {
	    my(undef, $actual) = @_;
	    # TESTING ONLY: Calling context should be completely opaque
	    return [@{$actual->[0]->[0]}];
	},
    } => [
	[] => [
	    {
		package => 'Bivio::Test',
		sub => qr{__ANON__},
	    },
	    {
		package => 'Bivio::Die',
		sub => qr{\(eval\)},
	    },
	],
    ],
    warn_exactly_once => [
	hello => qr{\d+ hello$},
	hello => [undef],
    ],
];
