# Copyright (c) 2009 bivio Software, Inc.  All Rights Reserved.
# $Id$
ShellUtil();
req()->set_realm_and_user('wiki_bunit', 'root');
model('RealmFile')->delete_all;
my($original) = <<'EOF';
@b-widget arg
^&quot;
EOF
my($cases) = [map(
    {
	my($type, $path, $expect_change) = @$_;
	map(+{
	    path => model('RealmFile')->create_with_content(
		{path => b_use("Type.$type")->to_absolute($path, $_)},
		\($original),
	    )->get('path'),
	    expect_change => $expect_change,
	}, 0 .. 1),
    }
    [FilePath => random_string(), 0],
    [WikiName => random_string(), 1],
    [BlogFileName => Type_DateTime()->now_as_file_name, 1],
)];
my($update) = $original;
$update =~ s/(?=arg)/value=/g;
$update =~ s/\^(?=\&)/\@/g;
[
    [qw(-realm wiki_bunit upgrade_content)] => sub {
	foreach my $c (@$cases) {
	    assert_equals(
		$c->{expect_change} ? $update : $original,
		model('RealmFile', {path => $c->{path}})->get_content,
		$c->{path},
	    );
	}
	return 1;
    },
];
