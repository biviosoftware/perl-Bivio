# Copyright (c) 2002-2013 bivio Software, Inc.  All Rights Reserved.
# $Id$
ShellUtil();
my($tmp) = tmp_dir();
config({
    'Bivio::Util::Release' => {
	rpm_home_dir => my $home = IO_File()->mkdir_p("$tmp/b-release/rpms"),
	rpm_user => $ENV{USER},
	rpm_group => $ENV{USER},
	tmp_dir => IO_File()->mkdir_p("$tmp/b-release/tmp"),
	cvs_rpm_spec_dir => 'not-needed',
    },
});
IO_File()->chdir($tmp);
my $spec = 'release-bunit.spec';
IO_File()->write(
    $spec,
    << 'END',
Summary: Release.bunit test data
Group: Bivio/Test
Provides: provides-aa
Provides: provides-bb

_b_release_include('release-bunit.include');

_b_release_files(q{
    %defattr(440,root,root)
    ${bunit_macro2}

    ${bunit_macro1}->{bunit_file}
    ${bunit_macro1}->{not_found_value}

    %
    +

    %files
});
END
);
IO_File()->write(
    'release-bunit.include',
    << 'END',
%description
%{summary}

%prep

%build
one=/tmp/release-bunit-one$$
touch $one
two=/tmp/release-bunit$$
three=/var/tmp/release-bunit$$
mkdir -p $two $three || exit 1
%{safe_rm} $one
test -r $one && (echo $one: safe_rm failure; exit 1)
%{safe_rm} $two || true
test -d $two || (echo $two: safe_rm failure; exit 1)
rmdir $two
%{safe_rm} $three
test -d $three && (echo $three: safe_rm failure; exit 1)

%clean

%install
cd %{buildroot}
echo one > file1.txt
echo two > file2.txt

_b_release_define(bunit_macro1 => {
    bunit_file => q{
        %attr(444,-,-)
        /file1.txt
    },
    bunit_eval => q{
        IO_File()->write('file3.txt', 'three') ;
    },
});
_b_release_define(bunit_macro2 => '/file2.txt');

/usr/bin/b-shell batch <<'EOF'
Release();
my($x) = {%{bunit_macro1}};
Bivio::Die->eval_or_die($x->{bunit_eval});
EOF
END
);
[
    [build => $spec] => sub {
	my($rpm) = "$home/release-bunit-HEAD.rpm";
	assert_equals(1, -l $rpm);
	assert_equals("/file1.txt\n/file2.txt\n/file3.txt\n", scalar(`rpm -qlp $rpm`));
	assert_equals(
	    qr{^provides-aa\s*\nprovides-bb\s*\nrelease-bunit = HEAD-\d+_\d+}s,
	    scalar(`rpm -qp --provides $rpm`),
	);
	return 1;
    },
];
