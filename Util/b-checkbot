#!perl -w
# Copyright (c) 1999 bivio, LLC.  All rights reserved.
# $Id$
use strict;

=head1 NAME

b-checkbot - recursively retrieve pages from a web server

=head1 SYNOPSIS

b-checkbot url ...

=head1 DESCRIPTION

B<b-checkbot> creates a C<checkbot.html> file containing the
test results. The first URL defines the access prefix. Any
URL beginning with this prefix is considered internal and will
be retrieved (GET) and parsed for links. Any other link is external
and only its header (HEAD) is retrieved to see if the link exists.

=cut

#=IMPORTS
use Cwd;

#=VARIABLES
my(@_URLS) = ();

sub main {
    my(@argv) = @_;
    my($mail, $bot_opt, $verbose);
    my($bot_opt) = '--sleep 0 ';
    while (@argv) {
	my($a) = shift(@argv);
	$a =~ /^-m$/ && ($mail = shift(@argv), next);
	$a =~ /^-v$/ && ($verbose++, $bot_opt .= '--verbose ', next);
	_usage("unknown option \"$a\"") if $a =~ /^-/;
	push(@_URLS, $a);
    }
    @_URLS || &_usage("Missing test URLs");
    exists($ENV{'http_proxy'}) && ($bot_opt .= "--proxy $ENV{'http_proxy'} ");
    
    open(BOT, "checkbot $bot_opt @_URLS 2>&1|");
    my(@bot_out);
    while(<BOT>) {
        $verbose || (push(@bot_out, $_), next);
        print;
    }
    close(BOT);
    $? && warn("checkbot failed (rc=$?):\n@bot_out");
    print"View the test results in\n\tfile:";
    print cwd, "/checkbot.html\n";
}

#=PRIVATE METHODS

sub _usage (@) {
    $SIG{__DIE__} = '';
    die <<"EOF";
b-checkbot: @{[join('', @_)]}
usage: b-checkbot [-v] url ...
EOF
}

#=END

main(@ARGV);

=head1 SEE ALSO

Bivio::IO::Config

=head1 COPYRIGHT

Copyright (c) 1999 bivio, LLC.  All rights reserved.

=head1 VERSION

$Id$

=cut

#Local Variables:
#mode:cperl
#End:
