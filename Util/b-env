#!/usr/bin/perl -w
#!perl -w
# Copyright (c) 2012-2013 bivio Software, Inc.  All Rights Reserved.
# $Id$
use strict;

=head1 NAME

b-env - sets up BCONF and PERLLIB

=head1 SYNOPSIS

b-env prefix [RootPkg] [src_tree]

=head1 DESCRIPTION

Examples:

    eval $(b-env pet Bivio/PetShop)
    eval $(b-env b '' test)

=cut

#=IMPORTS

#=VARIABLES
main(@ARGV);

sub main {
    my($is_env, $prefix, $root_pkg, $src_tree) = _args(@_);
    my($src, $perllib) = _src($prefix, $src_tree);
    my($env) = "PERLLIB='$perllib' BCONF='"
	. _bconf($prefix, $root_pkg, $src)
	. q{'};
    print(
	$is_env ? ('env ', $env, ' ')
	    : ('export ', $env, _cd($root_pkg, $perllib)),
    );
    return;
}

sub _args {
    my($is_env) = ($_[0] || '') =~ /^-env$/ ? shift(@_) && 1 : 0;
    my($prefix, $root_pkg, $src_tree) = @_;
    $src_tree =~ s{.*src_(?=\w+)$}{}
	if $src_tree;
    $root_pkg = 'Bivio/PetShop'
	if ($root_pkg || '') eq 'Bivio';
    return ($is_env, $prefix, $root_pkg, $src_tree)
	if ($prefix || '') =~ /^[a-z0-9]+$/;
    return ($is_env, undef, $prefix)
	if ($prefix || '') =~ /^[A-Z]\w+/;
    _err("usage: prefix [RootPkg] [src_tree] | RootPkg");
    # DOES NOT RETURN
}

sub _bconf {
    my($prefix, $root_pkg, $src) = @_;
    my($try) = [];
    if ($prefix) {
	my($bconf) = "$src/bconf/$prefix.bconf";
	return $bconf
	    if -f $bconf;
	push(@$try, $bconf);
	if ($src =~ m{/src$}) {
	    return $bconf
		if -f ($bconf = "$ENV{HOME}/bconf/$prefix.bconf");
	    push(@$try, $bconf);
	}
	return $bconf
	    if -r ($bconf = "/etc/$prefix.bconf");
	push(@$try, $bconf);
    }
    if ($ENV{BIVIO_HTTPD_PORT} && $root_pkg) {
	(my $x = $root_pkg) =~ s{/}{::}g;
	return $x;
    }
    _err("$prefix.bconf: not found in: @$try");
    # DOES NOT RETURN
}

sub _cd {
    my($root_pkg, $perllib) = @_;
    return ''
	unless $root_pkg;
    my($dir) = "$perllib/$root_pkg";
    _err("$dir: directory not found")
	unless -d $dir;
    return " && cd $dir";
}

sub _err {
    print(STDERR map("$_\n", @_));
    CORE::exit(1);
    # DOES NOT RETURN
}

sub _src {
    my($prefix, $src_tree) = @_;
    my($try) = [map(
	"$ENV{HOME}/src$_",
	$src_tree ? "_$src_tree" : (),
	$prefix ? "_$prefix" : (),
	'',
    )];
    foreach my $src (@$try) {
	next
	    unless -d (my $perllib = "$src/perl");
	return ($src, $perllib);
    }
    _err("perl: dir not found in: @$try");
    # DOES NOT RETURN
}

=head1 SEE ALSO

Bivio::Util::Project

=head1 COPYRIGHT

Copyright (c) 2012-2013 bivio Software, Inc.  All Rights Reserved.

=head1 VERSION

$Id$

=cut

#Local Variables:
#mode:cperl
#End:

1;
