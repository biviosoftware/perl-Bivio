# Copyright (c) 2000 bivio Software, Inc.  All rights reserved.
# $Id$
package Bivio::Ext::ApacheConstants;
use strict;
$Bivio::Ext::ApacheConstants::VERSION = sprintf('%d.%02d', q$Revision$ =~ /\d+/g);

=head1 NAME

Bivio::Ext::ApacheConstants - defines apache constants simply

=head1 RELEASE SCOPE

bOP

=head1 SYNOPSIS

    use Bivio::Ext::ApacheConstants;
    Bivio::Ext::ApacheConstants->new();

=cut

use Bivio::UNIVERSAL;
@Bivio::Ext::ApacheConstants::ISA = ('Bivio::UNIVERSAL');

=head1 DESCRIPTION

C<Bivio::Ext::ApacheConstants> defines the Apache constants simply.
The module C<Apache::Constants> is broken when not loaded in Apache.
It is way to complex to figure out.  The stubs in this module are
generated by first parsing the Constants.xs file with:

    perl -n - Constants.xs <<'EOF'
    /strEQ.*"(\w+)"/ && print "print OUT \"$1 \",",
          " Apache::Constants::$1(), \"\\n\";\n";
    EOF

Then inserting that output in Agent::Dispatcher::initialize:

    open(OUT, '>constants.txt');
    -- insert the output above
    close(OUT);

Start apache.  You may have go a couple of runs as not all constants
are defined on all platforms.

Then take that output and run it through:

    perl -n - constants.txt <<'END';
    my($w, $v) = split;

    print <<"EOF";

    =for html <a name="$w"></a>

    =head2 $w : int

    Returns $v.

    =cut

    sub $w {
	return $v;
    }
    EOF
    END

Insert the result in the methods section.

=cut

#=IMPORTS

#=VARIABLES

=head1 METHODS

=cut


=for html <a name="AUTH_REQUIRED"></a>

=head2 AUTH_REQUIRED : int

Returns 401.

=cut

sub AUTH_REQUIRED {
    return 401;
}

=for html <a name="ACCESS_CONF"></a>

=head2 ACCESS_CONF : int

Returns 64.

=cut

sub ACCESS_CONF {
    return 64;
}

=for html <a name="BAD_GATEWAY"></a>

=head2 BAD_GATEWAY : int

Returns 502.

=cut

sub BAD_GATEWAY {
    return 502;
}

=for html <a name="BAD_REQUEST"></a>

=head2 BAD_REQUEST : int

Returns 400.

=cut

sub BAD_REQUEST {
    return 400;
}

=for html <a name="CONTINUE"></a>

=head2 CONTINUE : int

Returns -1.

=cut

sub CONTINUE {
    return -1;
}

=for html <a name="DECLINED"></a>

=head2 DECLINED : int

Returns -1.

=cut

sub DECLINED {
    return -1;
}

=for html <a name="DOCUMENT_FOLLOWS"></a>

=head2 DOCUMENT_FOLLOWS : int

Returns 200.

=cut

sub DOCUMENT_FOLLOWS {
    return 200;
}

=for html <a name="DONE"></a>

=head2 DONE : int

Returns -2.

=cut

sub DONE {
    return -2;
}

=for html <a name="DYNAMIC_MODULE_LIMIT"></a>

=head2 DYNAMIC_MODULE_LIMIT : int

Returns 64.

=cut

sub DYNAMIC_MODULE_LIMIT {
    return 64;
}

=for html <a name="FORBIDDEN"></a>

=head2 FORBIDDEN : int

Returns 403.

=cut

sub FORBIDDEN {
    return 403;
}

=for html <a name="HTTP_ACCEPTED"></a>

=head2 HTTP_ACCEPTED : int

Returns 202.

=cut

sub HTTP_ACCEPTED {
    return 202;
}

=for html <a name="HTTP_BAD_GATEWAY"></a>

=head2 HTTP_BAD_GATEWAY : int

Returns 502.

=cut

sub HTTP_BAD_GATEWAY {
    return 502;
}

=for html <a name="HTTP_BAD_REQUEST"></a>

=head2 HTTP_BAD_REQUEST : int

Returns 400.

=cut

sub HTTP_BAD_REQUEST {
    return 400;
}

=for html <a name="HTTP_CONFLICT"></a>

=head2 HTTP_CONFLICT : int

Returns 409.

=cut

sub HTTP_CONFLICT {
    return 409;
}

=for html <a name="HTTP_CONTINUE"></a>

=head2 HTTP_CONTINUE : int

Returns 100.

=cut

sub HTTP_CONTINUE {
    return 100;
}

=for html <a name="HTTP_CREATED"></a>

=head2 HTTP_CREATED : int

Returns 201.

=cut

sub HTTP_CREATED {
    return 201;
}

=for html <a name="HTTP_FORBIDDEN"></a>

=head2 HTTP_FORBIDDEN : int

Returns 403.

=cut

sub HTTP_FORBIDDEN {
    return 403;
}

=for html <a name="HTTP_GATEWAY_TIME_OUT"></a>

=head2 HTTP_GATEWAY_TIME_OUT : int

Returns 504.

=cut

sub HTTP_GATEWAY_TIME_OUT {
    return 504;
}

=for html <a name="HTTP_GONE"></a>

=head2 HTTP_GONE : int

Returns 410.

=cut

sub HTTP_GONE {
    return 410;
}

=for html <a name="HTTP_INTERNAL_SERVER_ERROR"></a>

=head2 HTTP_INTERNAL_SERVER_ERROR : int

Returns 500.

=cut

sub HTTP_INTERNAL_SERVER_ERROR {
    return 500;
}

=for html <a name="HTTP_LENGTH_REQUIRED"></a>

=head2 HTTP_LENGTH_REQUIRED : int

Returns 411.

=cut

sub HTTP_LENGTH_REQUIRED {
    return 411;
}

=for html <a name="HTTP_METHOD_NOT_ALLOWED"></a>

=head2 HTTP_METHOD_NOT_ALLOWED : int

Returns 405.

=cut

sub HTTP_METHOD_NOT_ALLOWED {
    return 405;
}

=for html <a name="HTTP_MOVED_PERMANENTLY"></a>

=head2 HTTP_MOVED_PERMANENTLY : int

Returns 301.

=cut

sub HTTP_MOVED_PERMANENTLY {
    return 301;
}

=for html <a name="HTTP_MOVED_TEMPORARILY"></a>

=head2 HTTP_MOVED_TEMPORARILY : int

Returns 302.

=cut

sub HTTP_MOVED_TEMPORARILY {
    return 302;
}

=for html <a name="HTTP_MULTIPLE_CHOICES"></a>

=head2 HTTP_MULTIPLE_CHOICES : int

Returns 300.

=cut

sub HTTP_MULTIPLE_CHOICES {
    return 300;
}

=for html <a name="HTTP_NON_AUTHORITATIVE"></a>

=head2 HTTP_NON_AUTHORITATIVE : int

Returns 203.

=cut

sub HTTP_NON_AUTHORITATIVE {
    return 203;
}

=for html <a name="HTTP_NOT_ACCEPTABLE"></a>

=head2 HTTP_NOT_ACCEPTABLE : int

Returns 406.

=cut

sub HTTP_NOT_ACCEPTABLE {
    return 406;
}

=for html <a name="HTTP_NOT_FOUND"></a>

=head2 HTTP_NOT_FOUND : int

Returns 404.

=cut

sub HTTP_NOT_FOUND {
    return 404;
}

=for html <a name="HTTP_NOT_IMPLEMENTED"></a>

=head2 HTTP_NOT_IMPLEMENTED : int

Returns 501.

=cut

sub HTTP_NOT_IMPLEMENTED {
    return 501;
}

=for html <a name="HTTP_NOT_MODIFIED"></a>

=head2 HTTP_NOT_MODIFIED : int

Returns 304.

=cut

sub HTTP_NOT_MODIFIED {
    return 304;
}

=for html <a name="HTTP_NO_CONTENT"></a>

=head2 HTTP_NO_CONTENT : int

Returns 204.

=cut

sub HTTP_NO_CONTENT {
    return 204;
}

=for html <a name="HTTP_OK"></a>

=head2 HTTP_OK : int

Returns 200.

=cut

sub HTTP_OK {
    return 200;
}

=for html <a name="HTTP_PARTIAL_CONTENT"></a>

=head2 HTTP_PARTIAL_CONTENT : int

Returns 206.

=cut

sub HTTP_PARTIAL_CONTENT {
    return 206;
}

=for html <a name="HTTP_PAYMENT_REQUIRED"></a>

=head2 HTTP_PAYMENT_REQUIRED : int

Returns 402.

=cut

sub HTTP_PAYMENT_REQUIRED {
    return 402;
}

=for html <a name="HTTP_PRECONDITION_FAILED"></a>

=head2 HTTP_PRECONDITION_FAILED : int

Returns 412.

=cut

sub HTTP_PRECONDITION_FAILED {
    return 412;
}

=for html <a name="HTTP_PROXY_AUTHENTICATION_REQUIRED"></a>

=head2 HTTP_PROXY_AUTHENTICATION_REQUIRED : int

Returns 407.

=cut

sub HTTP_PROXY_AUTHENTICATION_REQUIRED {
    return 407;
}

=for html <a name="HTTP_REQUEST_ENTITY_TOO_LARGE"></a>

=head2 HTTP_REQUEST_ENTITY_TOO_LARGE : int

Returns 413.

=cut

sub HTTP_REQUEST_ENTITY_TOO_LARGE {
    return 413;
}

=for html <a name="HTTP_REQUEST_TIME_OUT"></a>

=head2 HTTP_REQUEST_TIME_OUT : int

Returns 408.

=cut

sub HTTP_REQUEST_TIME_OUT {
    return 408;
}

=for html <a name="HTTP_REQUEST_URI_TOO_LARGE"></a>

=head2 HTTP_REQUEST_URI_TOO_LARGE : int

Returns 414.

=cut

sub HTTP_REQUEST_URI_TOO_LARGE {
    return 414;
}

=for html <a name="HTTP_RESET_CONTENT"></a>

=head2 HTTP_RESET_CONTENT : int

Returns 205.

=cut

sub HTTP_RESET_CONTENT {
    return 205;
}

=for html <a name="HTTP_SEE_OTHER"></a>

=head2 HTTP_SEE_OTHER : int

Returns 303.

=cut

sub HTTP_SEE_OTHER {
    return 303;
}

=for html <a name="HTTP_SERVICE_UNAVAILABLE"></a>

=head2 HTTP_SERVICE_UNAVAILABLE : int

Returns 503.

=cut

sub HTTP_SERVICE_UNAVAILABLE {
    return 503;
}

=for html <a name="HTTP_SWITCHING_PROTOCOLS"></a>

=head2 HTTP_SWITCHING_PROTOCOLS : int

Returns 101.

=cut

sub HTTP_SWITCHING_PROTOCOLS {
    return 101;
}

=for html <a name="HTTP_UNAUTHORIZED"></a>

=head2 HTTP_UNAUTHORIZED : int

Returns 401.

=cut

sub HTTP_UNAUTHORIZED {
    return 401;
}

=for html <a name="HTTP_UNSUPPORTED_MEDIA_TYPE"></a>

=head2 HTTP_UNSUPPORTED_MEDIA_TYPE : int

Returns 415.

=cut

sub HTTP_UNSUPPORTED_MEDIA_TYPE {
    return 415;
}

=for html <a name="HTTP_USE_PROXY"></a>

=head2 HTTP_USE_PROXY : int

Returns 305.

=cut

sub HTTP_USE_PROXY {
    return 305;
}

=for html <a name="HTTP_VARIANT_ALSO_VARIES"></a>

=head2 HTTP_VARIANT_ALSO_VARIES : int

Returns 506.

=cut

sub HTTP_VARIANT_ALSO_VARIES {
    return 506;
}

=for html <a name="HTTP_VERSION_NOT_SUPPORTED"></a>

=head2 HTTP_VERSION_NOT_SUPPORTED : int

Returns 505.

=cut

sub HTTP_VERSION_NOT_SUPPORTED {
    return 505;
}

=for html <a name="HUGE_STRING_LEN"></a>

=head2 HUGE_STRING_LEN : int

Returns 8192.

=cut

sub HUGE_STRING_LEN {
    return 8192;
}

=for html <a name="MAX_STRING_LEN"></a>

=head2 MAX_STRING_LEN : int

Returns 8192.

=cut

sub MAX_STRING_LEN {
    return 8192;
}

=for html <a name="METHODS"></a>

=head2 METHODS : int

Returns 16.

=cut

sub METHODS {
    return 16;
}

=for html <a name="MOVED"></a>

=head2 MOVED : int

Returns 301.

=cut

sub MOVED {
    return 301;
}

=for html <a name="MULTI_STATUS"></a>

=head2 MULTI_STATUS : int

Returns 207

=cut

sub MULTI_STATUS {
    return 207;
}

=for html <a name="M_CONNECT"></a>

=head2 M_CONNECT : int

Returns 4.

=cut

sub M_CONNECT {
    return 4;
}

=for html <a name="MODULE_MAGIC_NUMBER"></a>

=head2 MODULE_MAGIC_NUMBER : int

Returns 19990320.

=cut

sub MODULE_MAGIC_NUMBER {
    return 19990320;
}

=for html <a name="M_DELETE"></a>

=head2 M_DELETE : int

Returns 3.

=cut

sub M_DELETE {
    return 3;
}

=for html <a name="M_GET"></a>

=head2 M_GET : int

Returns 0.

=cut

sub M_GET {
    return 0;
}

=for html <a name="M_INVALID"></a>

=head2 M_INVALID : int

Returns 15.

=cut

sub M_INVALID {
    return 15;
}

=for html <a name="M_OPTIONS"></a>

=head2 M_OPTIONS : int

Returns 5.

=cut

sub M_OPTIONS {
    return 5;
}

=for html <a name="M_POST"></a>

=head2 M_POST : int

Returns 2.

=cut

sub M_POST {
    return 2;
}

=for html <a name="M_PUT"></a>

=head2 M_PUT : int

Returns 1.

=cut

sub M_PUT {
    return 1;
}

=for html <a name="M_TRACE"></a>

=head2 M_TRACE : int

Returns 6.

=cut

sub M_TRACE {
    return 6;
}

=for html <a name="M_PATCH"></a>

=head2 M_PATCH : int

Returns 7.

=cut

sub M_PATCH {
    return 7;
}

=for html <a name="M_PROPFIND"></a>

=head2 M_PROPFIND : int

Returns 8.

=cut

sub M_PROPFIND {
    return 8;
}

=for html <a name="M_PROPPATCH"></a>

=head2 M_PROPPATCH : int

Returns 9.

=cut

sub M_PROPPATCH {
    return 9;
}

=for html <a name="M_MKCOL"></a>

=head2 M_MKCOL : int

Returns 10.

=cut

sub M_MKCOL {
    return 10;
}

=for html <a name="M_COPY"></a>

=head2 M_COPY : int

Returns 11.

=cut

sub M_COPY {
    return 11;
}

=for html <a name="M_MOVE"></a>

=head2 M_MOVE : int

Returns 12.

=cut

sub M_MOVE {
    return 12;
}

=for html <a name="M_LOCK"></a>

=head2 M_LOCK : int

Returns 13.

=cut

sub M_LOCK {
    return 13;
}

=for html <a name="M_UNLOCK"></a>

=head2 M_UNLOCK : int

Returns 14.

=cut

sub M_UNLOCK {
    return 14;
}

=for html <a name="NOT_AUTHORITATIVE"></a>

=head2 NOT_AUTHORITATIVE : int

Returns -1.

=cut

sub NOT_AUTHORITATIVE {
    return -1;
}

=for html <a name="NOT_FOUND"></a>

=head2 NOT_FOUND : int

Returns 404.

=cut

sub NOT_FOUND {
    return 404;
}

=for html <a name="NOT_IMPLEMENTED"></a>

=head2 NOT_IMPLEMENTED : int

Returns 501.

=cut

sub NOT_IMPLEMENTED {
    return 501;
}

=for html <a name="OK"></a>

=head2 OK : int

Returns 0.

=cut

sub OK {
    return 0;
}

=for html <a name="OPT_ALL"></a>

=head2 OPT_ALL : int

Returns 15.

=cut

sub OPT_ALL {
    return 15;
}

=for html <a name="OPT_EXECCGI"></a>

=head2 OPT_EXECCGI : int

Returns 8.

=cut

sub OPT_EXECCGI {
    return 8;
}

=for html <a name="OPT_INCLUDES"></a>

=head2 OPT_INCLUDES : int

Returns 2.

=cut

sub OPT_INCLUDES {
    return 2;
}

=for html <a name="OPT_INCNOEXEC"></a>

=head2 OPT_INCNOEXEC : int

Returns 32.

=cut

sub OPT_INCNOEXEC {
    return 32;
}

=for html <a name="OPT_INDEXES"></a>

=head2 OPT_INDEXES : int

Returns 1.

=cut

sub OPT_INDEXES {
    return 1;
}

=for html <a name="OPT_MULTI"></a>

=head2 OPT_MULTI : int

Returns 128.

=cut

sub OPT_MULTI {
    return 128;
}

=for html <a name="OPT_NONE"></a>

=head2 OPT_NONE : int

Returns 0.

=cut

sub OPT_NONE {
    return 0;
}

=for html <a name="OPT_SYM_LINKS"></a>

=head2 OPT_SYM_LINKS : int

Returns 4.

=cut

sub OPT_SYM_LINKS {
    return 4;
}

=for html <a name="OPT_SYM_OWNER"></a>

=head2 OPT_SYM_OWNER : int

Returns 64.

=cut

sub OPT_SYM_OWNER {
    return 64;
}

=for html <a name="OPT_UNSET"></a>

=head2 OPT_UNSET : int

Returns 16.

=cut

sub OPT_UNSET {
    return 16;
}

=for html <a name="OR_NONE"></a>

=head2 OR_NONE : int

Returns 0.

=cut

sub OR_NONE {
    return 0;
}

=for html <a name="OR_LIMIT"></a>

=head2 OR_LIMIT : int

Returns 1.

=cut

sub OR_LIMIT {
    return 1;
}

=for html <a name="OR_OPTIONS"></a>

=head2 OR_OPTIONS : int

Returns 2.

=cut

sub OR_OPTIONS {
    return 2;
}

=for html <a name="OR_FILEINFO"></a>

=head2 OR_FILEINFO : int

Returns 4.

=cut

sub OR_FILEINFO {
    return 4;
}

=for html <a name="OR_AUTHCFG"></a>

=head2 OR_AUTHCFG : int

Returns 8.

=cut

sub OR_AUTHCFG {
    return 8;
}

=for html <a name="OR_INDEXES"></a>

=head2 OR_INDEXES : int

Returns 16.

=cut

sub OR_INDEXES {
    return 16;
}

=for html <a name="OR_UNSET"></a>

=head2 OR_UNSET : int

Returns 32.

=cut

sub OR_UNSET {
    return 32;
}

=for html <a name="OR_ALL"></a>

=head2 OR_ALL : int

Returns 31.

=cut

sub OR_ALL {
    return 31;
}

=for html <a name="REDIRECT"></a>

=head2 REDIRECT : int

Returns 302.

=cut

sub REDIRECT {
    return 302;
}

=for html <a name="RSRC_CONF"></a>

=head2 RSRC_CONF : int

Returns 128.

=cut

sub RSRC_CONF {
    return 128;
}

=for html <a name="REMOTE_HOST"></a>

=head2 REMOTE_HOST : int

Returns 0.

=cut

sub REMOTE_HOST {
    return 0;
}

=for html <a name="REMOTE_NAME"></a>

=head2 REMOTE_NAME : int

Returns 1.

=cut

sub REMOTE_NAME {
    return 1;
}

=for html <a name="REMOTE_NOLOOKUP"></a>

=head2 REMOTE_NOLOOKUP : int

Returns 2.

=cut

sub REMOTE_NOLOOKUP {
    return 2;
}

=for html <a name="REMOTE_DOUBLE_REV"></a>

=head2 REMOTE_DOUBLE_REV : int

Returns 3.

=cut

sub REMOTE_DOUBLE_REV {
    return 3;
}

=for html <a name="REQUEST_NO_BODY"></a>

=head2 REQUEST_NO_BODY : int

Returns 0.

=cut

sub REQUEST_NO_BODY {
    return 0;
}

=for html <a name="REQUEST_CHUNKED_ERROR"></a>

=head2 REQUEST_CHUNKED_ERROR : int

Returns 1.

=cut

sub REQUEST_CHUNKED_ERROR {
    return 1;
}

=for html <a name="REQUEST_CHUNKED_DECHUNK"></a>

=head2 REQUEST_CHUNKED_DECHUNK : int

Returns 2.

=cut

sub REQUEST_CHUNKED_DECHUNK {
    return 2;
}

=for html <a name="REQUEST_CHUNKED_PASS"></a>

=head2 REQUEST_CHUNKED_PASS : int

Returns 3.

=cut

sub REQUEST_CHUNKED_PASS {
    return 3;
}

=for html <a name="RESPONSE_CODES"></a>

=head2 RESPONSE_CODES : int

Returns 55.

=cut

sub RESPONSE_CODES {
    return 55;
}

=for html <a name="SATISFY_ALL"></a>

=head2 SATISFY_ALL : int

Returns 0.

=cut

sub SATISFY_ALL {
    return 0;
}

=for html <a name="SATISFY_ANY"></a>

=head2 SATISFY_ANY : int

Returns 1.

=cut

sub SATISFY_ANY {
    return 1;
}

=for html <a name="SATISFY_NOSPEC"></a>

=head2 SATISFY_NOSPEC : int

Returns 2.

=cut

sub SATISFY_NOSPEC {
    return 2;
}

=for html <a name="SERVER_ERROR"></a>

=head2 SERVER_ERROR : int

Returns 500.

=cut

sub SERVER_ERROR {
    return 500;
}

=for html <a name="USE_LOCAL_COPY"></a>

=head2 USE_LOCAL_COPY : int

Returns 304.

=cut

sub USE_LOCAL_COPY {
    return 304;
}

#=PRIVATE METHODS

=head1 COPYRIGHT

Copyright (c) 2000 bivio Software, Inc.  All rights reserved.

=head1 VERSION

$Id$

=cut

1;

