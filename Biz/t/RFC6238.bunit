# Copyright (c) 2025 bivio Software Artisans, Inc.  All Rights Reserved.

# Test data from RFC 6238: https://datatracker.ietf.org/doc/html/rfc6238#appendix-B
#
# The test token shared secret uses the ASCII string value
# "12345678901234567890".  With Time Step X = 30, and the Unix epoch as
# the initial value to count time steps, where T0 = 0, the TOTP
# algorithm will display the following values for specified modes and
# timestamps.
#
# +-------------+--------------+------------------+----------+--------+
# |  Time (sec) |   UTC Time   | Value of T (hex) |   TOTP   |  Mode  |
# +-------------+--------------+------------------+----------+--------+
# |      59     |  1970-01-01  | 0000000000000001 | 94287082 |  SHA1  |
# |             |   00:00:59   |                  |          |        |
# |      59     |  1970-01-01  | 0000000000000001 | 46119246 | SHA256 |
# |             |   00:00:59   |                  |          |        |
# |      59     |  1970-01-01  | 0000000000000001 | 90693936 | SHA512 |
# |             |   00:00:59   |                  |          |        |
# |  1111111109 |  2005-03-18  | 00000000023523EC | 07081804 |  SHA1  |
# |             |   01:58:29   |                  |          |        |
# |  1111111109 |  2005-03-18  | 00000000023523EC | 68084774 | SHA256 |
# |             |   01:58:29   |                  |          |        |
# |  1111111109 |  2005-03-18  | 00000000023523EC | 25091201 | SHA512 |
# |             |   01:58:29   |                  |          |        |
# |  1111111111 |  2005-03-18  | 00000000023523ED | 14050471 |  SHA1  |
# |             |   01:58:31   |                  |          |        |
# |  1111111111 |  2005-03-18  | 00000000023523ED | 67062674 | SHA256 |
# |             |   01:58:31   |                  |          |        |
# |  1111111111 |  2005-03-18  | 00000000023523ED | 99943326 | SHA512 |
# |             |   01:58:31   |                  |          |        |
# |  1234567890 |  2009-02-13  | 000000000273EF07 | 89005924 |  SHA1  |
# |             |   23:31:30   |                  |          |        |
# |  1234567890 |  2009-02-13  | 000000000273EF07 | 91819424 | SHA256 |
# |             |   23:31:30   |                  |          |        |
# |  1234567890 |  2009-02-13  | 000000000273EF07 | 93441116 | SHA512 |
# |             |   23:31:30   |                  |          |        |
# |  2000000000 |  2033-05-18  | 0000000003F940AA | 69279037 |  SHA1  |
# |             |   03:33:20   |                  |          |        |
# |  2000000000 |  2033-05-18  | 0000000003F940AA | 90698825 | SHA256 |
# |             |   03:33:20   |                  |          |        |
# |  2000000000 |  2033-05-18  | 0000000003F940AA | 38618901 | SHA512 |
# |             |   03:33:20   |                  |          |        |
# | 20000000000 |  2603-10-11  | 0000000027BC86AA | 65353130 |  SHA1  |
# |             |   11:33:20   |                  |          |        |
# | 20000000000 |  2603-10-11  | 0000000027BC86AA | 77737706 | SHA256 |
# |             |   11:33:20   |                  |          |        |
# | 20000000000 |  2603-10-11  | 0000000027BC86AA | 47863826 | SHA512 |
# |             |   11:33:20   |                  |          |        |
# +-------------+--------------+------------------+----------+--------+

Request();
my($secret_chars) = join('', map($_ % 10, 1..64));
my($sha1) = [SHA1 => substr($secret_chars, 0, 20)];
my($sha256) = [SHA256 => substr($secret_chars, 0, 32)];
my($sha512) = [SHA512 => substr($secret_chars, 0, 64)];
[
    class() => [
        compute => [
            map(([
                $_->[0],
                8,
                $_->[1],
                class()->get_time_step(
                    Type_DateTime()->to_unix(Type_DateTime()->from_literal_or_die($_->[2])), 30),
            ] => $_->[3]),
                # Bivio::Type::DateTime doesn't support earlier test datetimes
                [@$sha1, '2005-03-18 01:58:29' => '07081804'],
                [@$sha256, '2005-03-18 01:58:29' => '68084774'],
                [@$sha512, '2005-03-18 01:58:29' => '25091201'],
                [@$sha1, '2005-03-18 01:58:31' => '14050471'],
                [@$sha256, '2005-03-18 01:58:31' => '67062674'],
                [@$sha512, '2005-03-18 01:58:31' => '99943326'],
                [@$sha1, '2009-02-13 23:31:30' => '89005924'],
                [@$sha256, '2009-02-13 23:31:30' => '91819424'],
                [@$sha512, '2009-02-13 23:31:30' => '93441116'],
                [@$sha1, '2033-05-18 03:33:20' => '69279037'],
                [@$sha256, '2033-05-18 03:33:20' => '90698825'],
                [@$sha512, '2033-05-18 03:33:20' => '38618901'],
                # Bivio::Type::DateTime doesn't support later test datetimes
            ),
        ],
        get_time_step => [
            map(([
                Type_DateTime()->to_unix(Type_DateTime()->from_literal_or_die($_->[0])),
                30,
            ] => hex($_->[1])),
                # Bivio::Type::DateTime doesn't support earlier test datetimes
                ['2005-03-18 01:58:29' => '00000000023523ec'],
                ['2005-03-18 01:58:31' => '00000000023523ed'],
                ['2009-02-13 23:31:30' => '000000000273ef07'],
                ['2033-05-18 03:33:20' => '0000000003f940aa'],
                # Bivio::Type::DateTime doesn't support later test datetimes
            ),
        ],
    ],
];
