# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
my($prev) = {};
[
    {
	object => class(),
	compute_return => sub {
	    my($case, $actual) = @_;
	    die("duplicate")
		if $prev->{$actual->[0]}++;
	    return [length($actual->[0])];
	},
    } => [
	bytes => [
	    4 => 4,
	    4 => 4,
	    4 => 4,
	    4 => 4,
	    4 => 4,
	    1 => 1,
	],
	hex_digits => [
	    1 => 1,
	    2 => 2,
	    3 => 3,
	],
	password => [
	    [] => 16,
	    [] => 16,
	    [] => 16,
	    [] => 16,
	    [] => 16,
	],
    ],
    class() => [
	string => [
	    [1, ['a']] => 'a',
	    [1, [qw(a b)]] => qr/^[ab]$/s,
	    [2, ['a']] => 'aa',
	],
	{
	    method => 'integer',
	    check_return => sub {
		my($case, $actual) = @_;
		my($ceiling) = shift->get('params')->[0];
		return $actual->[0] >= 0 && $actual->[0] < $ceiling ? 1 : 0;
	    },
	} => [
	    1 => [],
	    2 => [],
	    3 => [],
	    0 => DIE(),
	    -1 => DIE(),
	],
    ],
];
