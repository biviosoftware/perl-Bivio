# Copyright (c) 1999-2001 bivio Inc.  All rights reserved.
# $Id$
# Generated by ../generate.PL on Wed Aug 18  7:57:50 1999
# from tables.sql,v 1.13 1999/08/13 17:06:21 moeller Exp 
package Bivio::Biz::Model::Instrument;
use strict;
$Bivio::Biz::Model::Instrument::VERSION = sprintf('%d.%02d', q$Revision$ =~ /\d+/g);
$_ = $Bivio::Biz::Model::Instrument::VERSION;

=head1 NAME

Bivio::Biz::Model::Instrument - interface to instrument_t SQL table

=head1 SYNOPSIS

    use Bivio::Biz::Model::Instrument;
    Bivio::Biz::Model::Instrument->new($req);

=cut

=head1 EXTENDS

L<Bivio::Biz::PropertyModel>

=cut

use Bivio::Biz::PropertyModel;
@Bivio::Biz::Model::Instrument::ISA = qw(Bivio::Biz::PropertyModel);

=head1 DESCRIPTION

C<Bivio::Biz::Model::Instrument> is the create, read, update,
and delete interface to the C<instrument_t> table.

=cut

#=IMPORTS
use Bivio::SQL::Constraint;
use Bivio::Type::InstrumentType;
use Bivio::Type::Line;
use Bivio::Type::Name;
use Bivio::Type::Boolean;
use Bivio::Type::PrimaryId;

#=VARIABLES

=head1 METHODS

=cut

=for html <a name="abbreviate_name"></a>

=head2 static abbreviate_name(string name) : string

Abbreviates an instrument name.

Corporation --> Corp.
Incorporated --> Inc.
The ... --> ... The

=cut

sub abbreviate_name {
    my(undef, $name) = @_;

    $name =~ s/Corporation/Corp./i;
    $name =~ s/Incorporated/Inc./i;
    $name =~ s/^The\s(.*)$/$1 The/;

    # MGFS doesn't allow '@' symbol in name
    $name = '@Plan Inc.' if $name =~ /^At Plan Inc/;

    return $name;
}

=for html <a name="concat_name_ticker_symbol"></a>

=head2 static concat_name_ticker_symbol(string name, string ticker_symbol) : string

Formats into a pretty string "name (ticker)".

See also L<format_name_ticker_symbol|"format_name_ticker_symbol">.

=cut

sub concat_name_ticker_symbol {
    my($self, $name, $ticker_symbol) = @_;
    # Names always exist, but tickers may be missing
    return $name unless defined($ticker_symbol);
    return $name.' ('.$ticker_symbol.')';
}

=for html <a name="create"></a>

=head2 create(hash_ref new_values)

Sets I<fed_tax_free> if not set, then calls SUPER.

=cut

sub create {
    my($self, $values) = @_;
    $values->{fed_tax_free} = 0 unless defined($values->{fed_tax_free});
    return $self->SUPER::create($values);
}

=for html <a name="format_name_ticker_symbol"></a>

=head2 format_name_ticker_symbol() : string

Formats name and ticker using
L<concat_name_ticker_symbol|"concat_name_ticker_symbol">.

=cut

sub format_name_ticker_symbol {
    my($self) = @_;
    return $self->concat_name_ticker_symbol(
	    $self->get('name', 'ticker_symbol'));
}

=for html <a name="internal_initialize"></a>

=head2 internal_initialize() : hash_ref

B<FOR INTERNAL USE ONLY>

=cut

sub internal_initialize {
    return {
	version => 1,
	table_name => 'instrument_t',
	columns => {
            instrument_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::PRIMARY_KEY()],
            name => ['Bivio::Type::Line',
    		Bivio::SQL::Constraint::NOT_NULL()],
            ticker_symbol => ['Bivio::Type::Name',
    		Bivio::SQL::Constraint::NONE()],
            exchange_name => ['Bivio::Type::Name',
    		Bivio::SQL::Constraint::NONE()],
            instrument_type => ['Bivio::Type::InstrumentType',
    		Bivio::SQL::Constraint::NOT_NULL()],
            fed_tax_free => ['Bivio::Type::Boolean',
    		Bivio::SQL::Constraint::NOT_NULL()],
        },
    };
}

#=PRIVATE METHODS

=head1 COPYRIGHT

Copyright (c) 1999-2001 bivio Inc.  All rights reserved.

=head1 VERSION

$Id$

=cut

1;

