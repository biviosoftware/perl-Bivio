# Copyright (c) 1999 bivio, LLC.  All rights reserved.
# $Id$
# Generated by ../generate.PL on Wed Aug 18  7:57:50 1999
# from tables.sql,v 1.13 1999/08/13 17:06:21 moeller Exp 
package Bivio::Biz::Model::RealmTransaction;
use strict;
$Bivio::Biz::Model::RealmTransaction::VERSION = sprintf('%d.%02d', q$Revision$ =~ /\d+/g);

=head1 NAME

Bivio::Biz::Model::RealmTransaction - interface to realm_transaction_t SQL table

=head1 SYNOPSIS

    use Bivio::Biz::Model::RealmTransaction;
    Bivio::Biz::Model::RealmTransaction->new($req);

=cut

=head1 EXTENDS

L<Bivio::Biz::PropertyModel>

=cut

use Bivio::Biz::PropertyModel;
@Bivio::Biz::Model::RealmTransaction::ISA = qw(Bivio::Biz::PropertyModel);

=head1 DESCRIPTION

C<Bivio::Biz::Model::RealmTransaction> is the create, read, update,
and delete interface to the C<realm_transaction_t> table.

=cut

#=IMPORTS
use Bivio::SQL::Connection;
use Bivio::SQL::Constraint;
use Bivio::Type::DateTime;
use Bivio::Type::Name;
use Bivio::Type::PrimaryId;
use Bivio::Type::EntryClass;
use Bivio::Type::Text;

#=VARIABLES

=head1 METHODS

=cut

=for html <a name="cascade_delete"></a>

=head2 cascade_delete()

Deletes this transaction, and all its entires, member entries,
instrument entries, and account entries.

=cut

sub cascade_delete {
    my($self) = @_;
    my($id) = $self->get('realm_transaction_id');

    # delete member, instrument, and account entries
    foreach my $table ('member_entry_t', 'realm_instrument_entry_t',
	    'realm_account_entry_t') {
	Bivio::SQL::Connection->execute('
                DELETE FROM '.$table.'
                WHERE entry_id IN (
                SELECT entry_id FROM entry_t
                WHERE realm_transaction_id=?)',
	    [$id]);
    }

    # delete entries
    Bivio::SQL::Connection->execute('
            DELETE FROM entry_T
            WHERE realm_transaction_id=?',
	    [$id]);

    # delete the transaction
    $self->delete();

    return;
}

=for html <a name="internal_initialize"></a>

=head2 internal_initialize() : hash_ref

B<FOR INTERNAL USE ONLY>

=cut

sub internal_initialize {
    return {
	version => 1,
	table_name => 'realm_transaction_t',
	columns => {
            realm_transaction_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::PRIMARY_KEY()],
            realm_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::NOT_NULL()],
            source_class => ['Bivio::Type::EntryClass',
    		Bivio::SQL::Constraint::NOT_NULL()],
            date_time => ['Bivio::Type::DateTime',
    		Bivio::SQL::Constraint::NOT_NULL()],
            user_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::NOT_NULL()],
            remark => ['Bivio::Type::Text',
    		Bivio::SQL::Constraint::NONE()],
            broker_code => ['Bivio::Type::Name',
    		Bivio::SQL::Constraint::NONE()],
        },
	auth_id => 'realm_id',
	other => [
#	    [qw(realm_id RealmOwner.realm_id)],
	    [qw(user_id User.user_id)],
	],
    };
}

#=PRIVATE METHODS

=head1 COPYRIGHT

Copyright (c) 1999 bivio, LLC.  All rights reserved.

=head1 VERSION

$Id$

=cut

1;
