# Copyright (c) 1999 bivio, LLC.  All rights reserved.
# $Id$
# Generated by ../generate.PL on Wed Aug 18  7:57:50 1999
# from tables.sql,v 1.13 1999/08/13 17:06:21 moeller Exp 
package Bivio::Biz::Model::Entry;
use strict;
$Bivio::Biz::Model::Entry::VERSION = sprintf('%d.%02d', q$Revision$ =~ /\d+/g);
$_ = $Bivio::Biz::Model::Entry::VERSION;

=head1 NAME

Bivio::Biz::Model::Entry - interface to entry_t SQL table

=head1 SYNOPSIS

    use Bivio::Biz::Model::Entry;
    Bivio::Biz::Model::Entry->new($req);

=cut

=head1 EXTENDS

L<Bivio::Biz::PropertyModel>

=cut

use Bivio::Biz::PropertyModel;
@Bivio::Biz::Model::Entry::ISA = qw(Bivio::Biz::PropertyModel);

=head1 DESCRIPTION

C<Bivio::Biz::Model::Entry> is the create, read, update,
and delete interface to the C<entry_t> table.

=cut

#=IMPORTS

#=VARIABLES

=head1 METHODS

=cut

=for html <a name="internal_initialize"></a>

=head2 internal_initialize() : hash_ref

B<FOR INTERNAL USE ONLY>

=cut

sub internal_initialize {
    return {
	version => 1,
	table_name => 'entry_t',
	columns => {
            entry_id => ['PrimaryId', 'PRIMARY_KEY'],
            realm_id => ['PrimaryId', 'NOT_NULL'],
            realm_transaction_id => ['PrimaryId', 'NOT_NULL'],
            class => ['EntryClass', 'NOT_NULL'],
            entry_type => ['EntryType', 'NOT_NULL'],
            tax_category => ['TaxCategory', 'NOT_NULL'],
	    tax_basis => ['Boolean', 'NOT_NULL'],
            amount => ['Amount', 'NOT_NULL'],
        },
	other => [
	    [qw(realm_transaction_id RealmTransaction.realm_transaction_id)],
	],
	auth_id => 'realm_id',
    };
}

#=PRIVATE METHODS

=head1 COPYRIGHT

Copyright (c) 1999 bivio, LLC.  All rights reserved.

=head1 VERSION

$Id$

=cut

1;
