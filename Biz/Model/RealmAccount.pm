# Copyright (c) 1999 bivio, LLC.  All rights reserved.
# $Id$
# Generated by ../generate.PL on Wed Aug 18  7:57:50 1999
# from tables.sql,v 1.13 1999/08/13 17:06:21 moeller Exp 
package Bivio::Biz::Model::RealmAccount;
use strict;
$Bivio::Biz::Model::RealmAccount::VERSION = sprintf('%d.%02d', q$Revision$ =~ /\d+/g);

=head1 NAME

Bivio::Biz::Model::RealmAccount - interface to realm_account_t SQL table

=head1 SYNOPSIS

    use Bivio::Biz::Model::RealmAccount;
    Bivio::Biz::Model::RealmAccount->new($req);

=cut

=head1 EXTENDS

L<Bivio::Biz::PropertyModel>

=cut

use Bivio::Biz::PropertyModel;
@Bivio::Biz::Model::RealmAccount::ISA = qw(Bivio::Biz::PropertyModel);

=head1 DESCRIPTION

C<Bivio::Biz::Model::RealmAccount> is the create, read, update,
and delete interface to the C<realm_account_t> table.

=cut


=head1 CONSTANTS

=cut

=for html <a name="BANK"></a>

=head2 BANK : string

Predefined bank account name.

=cut

sub BANK {
    return 'Bank';
}

=for html <a name="BROKER"></a>

=head2 BROKER : string

Predefined broker account name.

=cut

sub BROKER {
    return 'Broker';
}

=for html <a name="PETTY_CASH"></a>

=head2 PETTY_CASH : string

Predefined petty cash account name.

=cut

sub PETTY_CASH {
    return 'Petty Cash';
}

=for html <a name="SUSPENSE"></a>

=head2 SUSPENSE : string

Predefined suspense account name

=cut

sub SUSPENSE {
    return 'Suspense';
}

#=IMPORTS
use Bivio::SQL::Connection;
use Bivio::SQL::Constraint;
use Bivio::Type::Boolean;
use Bivio::Type::DateTime;
use Bivio::Type::Line;
use Bivio::Type::Name;
use Bivio::Type::PrimaryId;

#=VARIABLES

=head1 METHODS

=cut

=for html <a name="get_value"></a>

=head2 get_value(string date) : string

Returns the account's balance on the specified date.

=cut

sub get_value {
    my($self, $date) = @_;

    Carp::croak('missing date parameter') unless $date;

    my($sth) = Bivio::SQL::Connection->execute(
	    'select sum(entry_t.amount) from realm_transaction_t, entry_t, realm_account_entry_t where realm_transaction_t.realm_transaction_id = entry_t.realm_transaction_id and entry_t.entry_id = realm_account_entry_t.entry_id and realm_transaction_t.realm_id=? and realm_account_entry_t.realm_account_id=? and realm_transaction_t.date_time <= '
	    .Bivio::Type::DateTime->to_sql_value('?'),
	    [$self->get_request->get('auth_id'),
		    $self->get('realm_account_id'),
		    Bivio::Type::DateTime->to_sql_param($date)]);

    return $sth->fetchrow_arrayref()->[0] || '0';
}

=for html <a name="internal_initialize"></a>

=head2 internal_initialize() : hash_ref

B<FOR INTERNAL USE ONLY>

=cut

sub internal_initialize {
    return {
	version => 1,
	table_name => 'realm_account_t',
	columns => {
            realm_account_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::PRIMARY_KEY()],
            realm_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::NOT_NULL()],
            name => ['Bivio::Type::Line',
    		Bivio::SQL::Constraint::NOT_NULL()],
            tax_free => ['Bivio::Type::Boolean',
    		Bivio::SQL::Constraint::NOT_NULL()],
            in_valuation => ['Bivio::Type::Boolean',
    		Bivio::SQL::Constraint::NOT_NULL()],
            institution_id => ['Bivio::Type::PrimaryId',
    		Bivio::SQL::Constraint::NONE()],
            account_number => ['Bivio::Type::Name',
    		Bivio::SQL::Constraint::NONE()],
            external_password => ['Bivio::Type::Name',
    		Bivio::SQL::Constraint::NONE()],
        },
#	auth_id => 'realm_id',
#	other => [
#	    [qw(realm_id RealmOwner.realm_id)],
#	],
    };
}

=for html <a name="create_initial"></a>

=head2 create_initial(Bivio::Biz::Model::RealmOwner realm)

Create the initial accounts (BANK, BROKER, SUSPENSE, and PETTY_CASH)
for a realm.

=cut

sub create_initial {
    my($self, $realm) = @_;
    my($realm_id) = $realm->get('realm_id');

    foreach my $n (BANK(), BROKER(), SUSPENSE(), PETTY_CASH()) {
	$self->create({
	    realm_id => $realm_id,
	    name => $n,
	    tax_free => 0,
	    in_valuation => $n ne PETTY_CASH() ? 1 : 0,
	});
    }
    return;
}

#=PRIVATE METHODS

=head1 COPYRIGHT

Copyright (c) 1999 bivio, LLC.  All rights reserved.

=head1 VERSION

$Id$

=cut

1;
