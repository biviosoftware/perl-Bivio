# Copyright (c) 2013 Bivio Software, Inc.  All Rights Reserved.
# $Id$
PropertyModel();
my($u) = sub {
    return create_user('u' . random_string())->get('realm_id');
};
my($realm_id) = realm_id('fourem');
my($user_id1) = $u->();
my($user_id2, $user_id3, $user_id4, $user_id5) = map($u->(), 2 .. 5);
req()->set_realm_and_user($realm_id, $user_id1);
[
    {
	method => 'create',
	compute_params => sub {
	    my(undef, $params) = @_;
	    return [{
		is_subscribed => pop(@$params),
		user_id => pop(@$params),
		realm_id => pop(@$params),
	    }];
	},
	compute_return => sub {
	    my(undef, $actual) = @_;
	    return [map($actual->[0]->get($_), qw(realm_id user_id is_subscribed))];
	},
    } => [
        [] => [$realm_id, $user_id1, 1],
        [$user_id2, 1] => [$realm_id, $user_id2, 1],
        [$user_id3, 0] => [$realm_id, $user_id3, 0],
        [realm_id('fourem-sub1'), $user_id4, 1]
	    => [realm_id('fourem-sub1'), $user_id4, 1],
        [realm_id('fourem-sub1'), $user_id5, 0]
	    => [realm_id('fourem-sub1'), $user_id5, 0],
    ],
];
