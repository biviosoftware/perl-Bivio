# Copyright (c) 2007 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
req()->set_realm_and_user('demo', 'demo');
my($root) = '/' . random_string();
my($f) = model('RealmFile');
$f->delete_deep
    if $f->unsafe_load({path => $root});
my($path) = sub {
    my($version, $base) = @_;
    return {path => ($base || "$root/file") . ($version ? ";$version" : '')};
};
my($commit) = sub {commit(); return 1};
options({
    compute_return => sub {
	my($case, $actual) = @_;
	my($f) = $actual->[0];
	return $case->get('method') eq 'load' ? [$f->get('is_folder')
	    ? $f->get_shallow_copy : $f->get_content] : $actual;
    },
    comparator => 'nested_contains',
});
[
    sub {class()->new(req())} => [
	create_with_content => [
	    [$path->(), \('foo1')] => not_die(),
	],
	update_with_content => [
	    [{}, \('foo2')] => not_die(),
	],
	load => [
	    [$path->(1)] => 'foo1',
	],
	load => [
	    [$path->()] => 'foo2',
	],
	update_with_content => [
	    [{}, \('foo3')] => $commit,
	],
	load => [
	    [$path->(undef, $root)] => [{is_folder => 1}],
	    [$path->()] => 'foo3',
	    [$path->(2)] => 'foo2',
	],
	delete => FORBIDDEN(),
	load => [
	    [$path->()] => 'foo3',
	],
	delete => $commit,
	load => [
	    [$path->(3)] => 'foo3',
	],
	unsafe_load => [
	    [$path->()] => 0,
	],
	create_folder => [
	    [$path->()] => not_die(),
	],
  	delete => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	    [$path->(4)] => 0,
	    [$path->(3)] => 1,
	],
	create_folder => [
	    [$path->()] => not_die(),
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	    [$path->(4)] => 0,
	    [$path->(3)] => 1,
	],
	create_folder => [
	    [$path->()] => not_die(),
	],
	create_with_content => [
	    [$path->(undef, "$root/file/bar"), \('123')] => not_die(),
	],
	load => [
	    [$path->(undef, "$root/file/bar")] => '123',
	    [$path->()] => [{is_folder => 1}],
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(4)] => [{is_folder => 1}],
	    [$path->(1, "$root/file/bar")] => '123',
	],
	create_with_content => [
	    [$path->(), \('foo5')] => not_die(),
	],
  	delete => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(4)] => [{is_folder => 1}],
	    [$path->(5)] => 'foo5',
	],
	create_with_content => [
	    [$path->(), \('foo6')] => not_die(),
	],
	load => [
	    [$path->()] => 'foo6',
	    [$path->(undef, $root)] => [{is_folder => 1}],
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(1, $root)] => [{is_folder => 1}],
	    [$path->(1)] => 'foo1',
	    [$path->(6)] => 'foo6',
	],
	create_with_content => [
	    [$path->(undef, "$root/dir/file"), \('bar1')] => not_die(),
	],
 	delete => not_die(),
	create_with_content => [
	    [$path->(undef, "$root/dir/file"), \('bar2')] => $commit,
	    [$path->(undef, "$root/dir/file"), \('bar3')] => DB_CONSTRAINT(),
	],
	load => [
	    [$path->(1, "$root/dir/file")] => 'bar1',
	    [$path->(undef, "$root/dir/file")] => 'bar2',
	    [$path->(undef, "$root/dir")] => not_die(),
	],
	copy_deep => [
 	    [{path => "$root/dir2"}] => $commit,
 	    [{path => "$root/dir3"}] => $commit,
	],
	load => [
	    [$path->(undef, "$root/dir2")] => not_die(),
	    [$path->(undef, "$root/dir2/file")] => 'bar2',
	    [$path->(undef, "$root/dir3")] => not_die(),
	    [$path->(undef, "$root/dir3/file")] => 'bar2',
	    [$path->(undef, "$root/dir/file")] => 'bar2',
	],
	update_with_content => [
	    [{}, \('bar3')] => $commit,
	],
	load => [
	    [$path->(2, "$root/dir/file")] => 'bar2',
	    [$path->(undef, "$root/dir/file")] => 'bar3',
	    [$path->(2, "$root/dir2/file")] => MODEL_NOT_FOUND(),
	    [$path->(undef, "$root/dir2/file")] => 'bar2',
	],
	update_with_content => [
	    [{}, \('bar3-2')] => $commit,
	],
	load => [
	    [$path->(1, "$root/dir2/file")] => 'bar2',
	    [$path->(undef, "$root/dir2/file")] => 'bar3-2',
	    [$path->(undef, "$root/dir2")] => not_die(),
	],
	copy_deep => [
	    [{path => "$root/dir3"}] => $commit,
	],
	load => [
	    [$path->(undef, "$root/dir3")] => not_die(),
	    [$path->(1, "$root/dir3/file")] => 'bar2',
	    [$path->(undef, "$root/dir3/file")] => 'bar3-2',
	],
	update => [
	    [{path => "$root/dir3/file3"}] => $commit,
	],
	load => [
	    [$path->(1, "$root/dir3/file3")] => MODEL_NOT_FOUND(),
	    [$path->(undef, "$root/dir3/file3")] => 'bar3-2',
	],
	update_with_content => [
	    [{}, \('bar3-3')] => not_die(),
	],
	load => [
	    [$path->(1, "$root/dir3/file3")] => 'bar3-2',
	    [$path->(undef, "$root/dir3/file3")] => 'bar3-3',
	],
	update => [
	    [{path => "$root/dir4/file4"}] => $commit,
	],
 	load => [
 	    [$path->(undef, "$root/dir3/file3")] => MODEL_NOT_FOUND(),
 	    [$path->(undef, "$root/dir4/file4")] => 'bar3-3',
 	],
	load => [
	    [$path->(undef, "$root/dir/file")] => 'bar3',
	    [$path->(2, "$root/dir/file")] => 'bar2',
	    [$path->(1, "$root/dir/file")] => 'bar1',
	],
	load => [
	    [$path->(undef, "$root/dir4/file4")] => 'bar3-3',
	],
	update => [
	    [{path => "$root/dir4/file4;1"}] => FORBIDDEN(),
	    [{path => "$root/dir4;1/file4"}] => FORBIDDEN(),
	],
	update_with_content => [
	    [{path => "$root/dir4/file4;1"}, \('foo2')] => FORBIDDEN(),
	    [{}, \('bar3-4')] => not_die(),
	],
	load => [
	    [$path->(undef, "$root/dir4/file4")] => 'bar3-4',
	    [$path->(1, "$root/dir4/file4")] => 'bar3-3',
	],
	load => [
	    [$path->(1, "$root/dir/file")] => 'bar1',
	],
	update_with_content => [
	    [{}, \('bar1a')] => FORBIDDEN(),
	],
	load => [
	    [$path->(undef, "$root/dir/file")] => 'bar3',
	    [$path->(2, "$root/dir/file")] => 'bar2',
	    [$path->(1, "$root/dir/file")] => 'bar1',
	],
	load => [
	    [$path->(undef, $root)] => [{is_folder => 1}],
	],
	create_folder => [
	    [$path->(undef, "$root/ver_d;1")] => FORBIDDEN(),
	    [$path->(undef, "$root/ver_d;99")] => FORBIDDEN(),
	],
	create_with_content => [
	    [$path->(undef, "$root/ver_f;2"), \('test')] => FORBIDDEN(),
	    [$path->(undef, "$root/ver_f;98"), \('test')] => FORBIDDEN(),
	],
	create_or_update_with_content => [
	    [$path->(undef, "$root/ver_f;3"), \('test2')] => FORBIDDEN(),
	    [$path->(undef, "$root/ver_f;97"), \('test2')] => FORBIDDEN(),
	],
	unsafe_load => [
	    [$path->(undef, "$root/ver_f;1")] => 0,
	    [$path->(undef, "$root/ver_d;2")] => 0,
	    [$path->(undef, "$root/ver_d;3")] => 0,
	],
	load => [
	    [$path->(undef, "$root/dir2")] => not_die(),
	],
	copy_deep => [
	    [{path => "$root/dir;1"}] => FORBIDDEN(),
	],
 	delete_all => not_die(),
    ],
];
