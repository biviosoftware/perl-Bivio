# Copyright (c) 2007 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
req()->set_realm_and_user('realmfile2', 'root');
my($root) = '/' . random_string();
my($f) = model('RealmFile');
$f->delete_deep
    if $f->unsafe_load({path => $root});
my($path) = sub {
    my($version, $base) = @_;
    ($base, $version) = ($version, undef)
	if defined($version) && $version =~ /\D/;
    $base ||= 'file';
    my($fp) = class('Type.FilePath');
    $base = $fp->join($root, $base);
    return {
	path => !defined($version) ? $base
	    : $fp->join($fp->VERSIONS_FOLDER, $base . ";$version"),
    };
};
my($commit) = sub {commit(); return 1};
options({
    compute_return => sub {
	my($case, $actual) = @_;
	my($f) = $actual->[0];
	return $case->get('method') eq 'load' ? [$f->get('is_folder')
	    ? $f->get_shallow_copy : $f->get_content] : $actual;
    },
    comparator => 'nested_contains',
});
model('RealmFile')->delete_all;
commit();
model('RealmFile')->init_realm;
commit();
[
    [req()] => [
	create_with_content => [
	    [$path->(), \('foo1')] => $commit,
	],
	update_with_content => [
	    [{}, \('foo2')] => $commit,
	],
	load => [
	    [$path->(1)] => 'foo1',
	    [$path->()] => 'foo2',
	],
	update_with_content => [
	    [{}, \('foo3')] => $commit,
	],
	load => [
	    [$path->()] => 'foo3',
	    [$path->(2)] => 'foo2',
	],
	delete => FORBIDDEN(),
	load => [
	    [$path->()] => 'foo3',
	],
	delete => $commit,
	load => [
	    [$path->(3)] => 'foo3',
	],
	unsafe_load => [
	    [$path->()] => 0,
	],
	create_folder => [
	    [$path->()] => $commit,
	],
  	delete => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	    [$path->(4)] => 0,
	    [$path->(3)] => 1,
	],
	create_folder => [
	    [$path->()] => $commit,
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	    [$path->(4)] => 0,
	    [$path->(3)] => 1,
	],
	create_folder => [
	    [$path->()] => $commit,
	],
	create_with_content => [
	    [$path->('file/bar'), \('123')] => $commit,
	],
	load => [
	    [$path->('file/bar')] => '123',
	    [$path->()] => [{is_folder => 1}],
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(1, 'file/bar')] => '123',
	],
	create_with_content => [
	    [$path->(), \('foo4')] => $commit,
	],
  	delete => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(4)] => 'foo4',
	],
	create_with_content => [
	    [$path->(), \('foo5')] => $commit,
	],
	load => [
	    [$path->()] => 'foo5',
	],
  	delete_deep => $commit,
	unsafe_load => [
	    [$path->()] => 0,
	],
	load => [
	    [$path->(1)] => 'foo1',
	    [$path->(5)] => 'foo5',
	],
	create_with_content => [
	    [$path->('dir/file'), \('bar1')] => $commit,
	],
 	delete => $commit,
	create_with_content => [
	    [$path->('dir/file'), \('bar2')] => $commit,
	    [$path->('dir/file'), \('bar3')] => DB_CONSTRAINT(),
	],
	load => [
	    [$path->(1, 'dir/file')] => 'bar1',
	    [$path->('dir/file')] => 'bar2',
	    [$path->('dir')] => not_die(),
	],
	copy_deep => [
 	    [$path->('dir2')] => $commit,
 	    [$path->('dir3')] => $commit,
	],
	load => [
	    [$path->('dir/file')] => 'bar2',
	    [$path->('dir2')] => not_die(),
	    [$path->('dir2/file')] => 'bar2',
	    [$path->('dir3')] => not_die(),
	    [$path->('dir3/file')] => 'bar2',
	    [$path->('dir/file')] => 'bar2',
	],
	update_with_content => [
	    [{}, \('bar3')] => $commit,
	],
	load => [
	    [$path->(2, 'dir/file')] => 'bar2',
	    [$path->('dir/file')] => 'bar3',
	    [$path->(2, 'dir2/file')] => MODEL_NOT_FOUND(),
	    [$path->('dir2/file')] => 'bar2',
	],
	update_with_content => [
	    [{}, \('bar3-2')] => $commit,
	],
	load => [
	    [$path->(1, 'dir2/file')] => 'bar2',
	    [$path->('dir2/file')] => 'bar3-2',
	    [$path->('dir3/file')] => 'bar2',
	    [$path->('dir2')] => not_die(),
	],
	inline_trace_on(),
	copy_deep => [
	    [$path->('dir3')] => $commit,
	],
	inline_trace_off(),
	load => [
	    [$path->('dir3')] => not_die(),
	    [$path->(1, 'dir3/file')] => 'bar2',
	    [$path->('dir3/file')] => 'bar3-2',
	],
	update => [
	    [$path->('dir3/file3')] => $commit,
	],
	load => [
	    [$path->(1, 'dir3/file3')] => MODEL_NOT_FOUND(),
	    [$path->('dir3/file3')] => 'bar3-2',
	],
	update_with_content => [
	    [{}, \('bar3-3')] => $commit,
	],
	load => [
	    [$path->(1, 'dir3/file3')] => 'bar3-2',
	    [$path->('dir3/file3')] => 'bar3-3',
	],
	update => [
	    [$path->('dir4/file4')] => $commit,
	],
 	load => [
 	    [$path->('dir3/file3')] => MODEL_NOT_FOUND(),
 	    [$path->('dir4/file4')] => 'bar3-3',
 	],
	load => [
	    [$path->('dir/file')] => 'bar3',
	    [$path->(2, 'dir/file')] => 'bar2',
	    [$path->(1, 'dir/file')] => 'bar1',
	],
	load => [
	    [$path->('dir4/file4')] => 'bar3-3',
	],
	update_with_content => [
	    [{}, \('bar3-4')] => $commit,
	],
	load => [
	    [$path->('dir4/file4')] => 'bar3-4',
	    [$path->(1, 'dir4/file4')] => 'bar3-3',
	],
	load => [
	    [$path->(1, 'dir/file')] => 'bar1',
	],
	update_with_content => [
	    [{}, \('bar1a')] => FORBIDDEN(),
	],
	load => [
	    [$path->('dir/file')] => 'bar3',
	    [$path->(2, 'dir/file')] => 'bar2',
	    [$path->(1, 'dir/file')] => 'bar1',
	],
	unsafe_load => [
	    [$path->('ver_f;1')] => 0,
	    [$path->('ver_d;2')] => 0,
	    [$path->('ver_d;3')] => 0,
	],
	load => [
 	    [$path->('dir2')] => not_die(),
	],
    ],
];
