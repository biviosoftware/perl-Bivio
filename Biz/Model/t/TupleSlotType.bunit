# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
PropertyModel();
req()->set_realm_and_user(qw(demo demo));
my($tsa) = class('Type.TupleSlotArray');
[
    create_from_hash => [
	[{tst1 => {
	    type_class => 'Integer',
	    choices => undef,
	    default_value => 1,
	}}] => [{
	    choices => undef,
	    default_value => 1,
	}],
    ],
    validate_slot => [
	x => [undef, Bivio::TypeError->INTEGER],
	1 => [1, undef],
    ],
    create_from_hash => [
	[{tst2 => {
	    type_class => 'Integer',
	    choices => "1$;2",
	}}] => [{
	    choices => $tsa->new([1, 2]),
	}],
    ],
    validate_slot => [
	1 => [1, undef],
	3 => [undef, Bivio::TypeError->NOT_TUPLE_CHOICE],
    ],
    create_from_hash => [
	[{tst3 => {
	    type_class => 'Date',
	    choices => "9/1/2006$;10/1/2006",
	}}] => [{
	    choices => $tsa->new(['2453980 79199', '2454010 79199']),
	}],
    ],
    validate_slot => [
	'9/1/2006' => ['2453980 79199', undef],
	'9/2/2006' => [undef, Bivio::TypeError->NOT_TUPLE_CHOICE],
	'9/2' => [undef, Bivio::TypeError->DATE],
    ],
    create_from_hash => [
	[{tst4 => {
	    type_class => 'Integer',
	    choices => "1$;x",
	}}] => DIE(),
	[{tst5 => {
	    type_class => 'Integer',
	    default_value => 'x',
	}}] => DIE(),
	[{tst5 => {
	    type_class => 'Integer',
	    choices => "1$;2",
	    default_value => '3',
	}}] => DIE(),
    ],
];
