# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
my($tn, $tdid);
FormModel({
    setup_request => sub {
	my($case) = @_;
	$tn = model('Tuple')->create(
	    {
		tuple_def_id => $tdid,
		slot1 => 'a@a.a',
		slot2 => 's1',
	    })->get('tuple_num')
	    unless @{$case->get('params')};
	req()->put(query => {
	    parent_id => $tdid,
	    $tn ? (this => $tn) : (),
	});
	return;
    },
});
req()->set_realm_and_user(qw(fourem btest_read));
$tdid = model(TupleUseList => {auth_id => req('auth_id')})
    ->moniker_to_id('PSR');
model('Tuple')->delete_all;
[
    [{
	comment => 'hello',
        slot_0 => 'a@a.a',
    }] => [{
	'Model.TupleSlotListForm' => {
	    slot_headers => "Author: a\@a.a\nStatus: s1\n",
	    'RealmMail.from_email' => 'btest_read@bivio.biz',
	    'RealmMail.subject' => 'PSR#',
	 },
    }],
    empty_case({
	slot_0 => 'a@a.a',
	slot_1 => 's1',
	comment => undef,
    }),
    [{
	comment => 'hello',
	slot_0 => 'a@a.a',
	slot_1 => 's2',
    }] => [{
	'Model.TupleSlotListForm' => {
	    slot_headers => "Status: s2\n",
	    'RealmMail.from_email' => 'btest_read@bivio.biz',
	    'RealmMail.subject' => 'PSR#1',
	 },
    }],
];
