# Copyright (c) 2006 bivio Software, Inc.  All Rights Reserved.
# $Id$
options({class_name => 'Bivio::Biz::Model::RealmMail'});
PropertyModel();
req()->set_realm_and_user(qw(fourem root));
model('Tuple')->delete_all({realm_id => req('auth_id')});
# See tuple2.bunit for other Tuple unit tests
[
    create_from_rfc822 => [
	[\(<<'EOF')]
From: a@a.a
Message-ID: <1@a.a>
Subject: psr#

Author: b@b.b

Some text
EOF
	=> [{
	    'Model.Tuple' => {
		tuple_num => 1,
		slot1 => 'b@b.b',
		slot2 => 's1',
	    },
	    'Model.RealmMail' => {
		subject => 'psr#1',
	    },
	}],
	[\(<<'EOF')]
From: a@a.a
Message-ID: <2@a.a>
Subject: psr#1

Status: s2

Some text
EOF
	=> [{
	    'Model.Tuple' => {
		tuple_num => 1,
		slot1 => 'b@b.b',
		slot2 => 's2',
	    },
	}],
	[\(<<'EOF')]
From: a@a.a
Message-ID: <2@a.a>
Subject: psr#1

Status:

Some text
EOF
	=> [{
	    'Model.Tuple' => {
		tuple_num => 1,
		slot1 => 'b@b.b',
		slot2 => undef,
	    },
	}],
	[\(<<'EOF')]
From: a@a.a
Message-ID: <2@a.a>
Subject: psr#1

Author:
Status: s3

Some text
EOF
	=> qr{Author: contains an invalid value},
    ],
];
