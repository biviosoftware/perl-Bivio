# Copyright (c) 2008 bivio Software, Inc.  All Rights Reserved.
# $Id$
FormModel();
[
    req_state({
        task => sub {
            req()->set_realm(req('auth_user_id'));
            model('UserSubscriptionList')->load_all_qualified_realms;
            return 'USER_SETTINGS_FORM';
        },
        user => 'crm_tech1',
    }),
    [{
        'User.last_name' => 'crm_tech1',
        is_subscribed_1 => 1,
        page_size => 33,
        time_zone_selector => 'UTC',
        'Email.email' => email('crm_tech1'),
    }] => not_die(),
    empty_case({
        page_size => 33,
        time_zone_selector => 'UTC',
        is_subscribed_0 => 0,
        is_subscribed_1 => 1,
        'Email.email' => email('crm_tech1'),
    }),
    error_case({
        'User.last_name' => 'crm_tech1',
        page_size => 20,
        time_zone_selector => 'this_time_zone_doesnt_exist',
        'Email.email' => email('crm_tech1'),
    } => {
        time_zone_selector => 'NOT_FOUND',
    }),
    error_case({
        'User.last_name' => 'crm_tech1',
        page_size => 20,
        time_zone_selector => 'Select Time Zone',
        'Email.email' => email('crm_tech1'),
    } => {
        time_zone_selector => 'NOT_FOUND',
    }),
    [{
        'User.last_name' => 'crm_tech1',
        page_size => 20,
        time_zone_selector => 'Europe/London',
        'Email.email' => email('crm_tech1'),
    }] => [{
        'Model.RowTag' => {
            key => 'TIME_ZONE',
            value => TimeZone('EUROPE_LONDON')->as_sql_param,
        },
    }],
    error_case({} => {
        page_size => 'NULL',
        'User.first_name' => 'NULL',
        'User.middle_name' => undef,
        'User.last_name' => undef,
        'RealmOwner.name' => undef,
        'Email.email' => 'NULL',
        time_zone_selector => 'NOT_FOUND',
    }),
    req_state_merge({user => 'root'}),
    error_case({} => {
        page_size => 'NULL',
        'User.first_name' => 'NULL',
        'User.middle_name' => undef,
        'User.last_name' => undef,
        'RealmOwner.name' => 'NULL',
        'Email.email' => 'NULL',
        time_zone_selector => 'NOT_FOUND',
    }),
    sub {
        b_use('Model.UserLoginForm')->substitute_user(
            unauth_model('RealmOwner', {
                name => 'crm_tech1',
            }), req());
    } => undef,
    error_case({} => {
        page_size => 'NULL',
        'User.first_name' => 'NULL',
        'User.middle_name' => undef,
        'User.last_name' => undef,
        'RealmOwner.name' => 'NULL',
        'Email.email' => 'NULL',
        time_zone_selector => 'NOT_FOUND',
    }),
];
