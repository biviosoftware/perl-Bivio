# $Id$
# Copyright (c) 2002-2005 bivio Software, Inc.  All rights reserved.
Request('setup_facade');
[{
    compute_params => => sub {
	my($case, $params) = @_;
	my($from, $recipient) = @$params;
	return [req(),  {
	    recipient => $recipient,
	    client_addr => '1.2.3.4',
	    message => {
		name => '',
		content => \(qq{From: @{[$from =~ /\@/ ? $from : "$from\@bivio.biz"]}\n\n}),
	    },
	}];
    },
    check_return => sub {
	my($case, undef, $expect) = @_;
	$case->actual_return([
	    req()->get('auth_user') && req()->get('auth_user')->get('name'),
	    req()->get('auth_realm')->unsafe_get('owner_name'),
	    req()->get('task_id'),
	]);
	return [@$expect[0..1], $expect->[2] || Bivio::Agent::TaskId->MAIL_RECEIVE_IGNORE];
    },
    object => class(),
} => [
    execute => [
	    # [From:, To:] => [auth_user, auth_realm]
	['demo', 'demo-ignore'] => ['demo', 'demo'],
	['demo', 'ignore.demo'] => ['demo', 'demo'],
	['Bob <demo@bivio.biz>', 'ignore.demo'] => ['demo', 'demo'],
	['not_a_user', 'demo-ignore'] => [undef, 'demo'],
	['demo', 'not_a_user-ignore'] => Bivio::DieCode->MODEL_NOT_FOUND,
	['demo', 'demo'] => [demo => demo => Bivio::Agent::TaskId->MAIL_RECEIVE],
	['demo', 'demo-ignore+antything'] => ['demo', 'demo'],
	# Should not see "unknown facade uri"
	['demo', 'demo-ignore+antything@petshop.bivio.biz'] => ['demo', 'demo'],
    ],
]];
