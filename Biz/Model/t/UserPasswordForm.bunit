# Copyright (c) 2007-2023 bivio Software, Inc.  All Rights Reserved.
FormModel();
req()->set_realm_and_user(qw(demo demo));
[
    simple_case({
        old_password => 'password',
        new_password => 'password',
        confirm_new_password => 'password',
    } => {
        new_password => 'password',
        confirm_new_password => 'password',
    }),
    error_case({
        old_password => '',
        new_password => 'password',
        confirm_new_password => 'password',
    } => {
        old_password => 'NULL',
    }),
    error_case({
        old_password => 'password',
        new_password => 'pass',
        confirm_new_password => 'pass',
    } => {
        new_password => 'TOO_SHORT',
    }),
    # There is a separate validation mechanism for 6-7 char passwords
    error_case({
        old_password => 'password',
        new_password => 'passwd',
        confirm_new_password => 'passwd',
    } => {
        new_password => 'TOO_SHORT',
    }),
    error_case({
        old_password => 'badbad',
        new_password => 'password',
        confirm_new_password => 'password',
    } => {
        old_password => 'PASSWORD_MISMATCH',
    }),
    error_case({
        old_password => 'password',
        new_password => 'password',
        confirm_new_password => 'password2',
    } => {
        confirm_new_password => 'CONFIRM_PASSWORD',
    }),
    inline_case(sub {
        req()->set_user('root');
        model('UserLoginForm')->substitute_user(
            model('RealmOwner', {name => 'demo'}),
            req(),
        ),
    }),
    simple_case({
        old_password => 'anything',
        new_password => 'password',
        confirm_new_password => 'password',
    } => {
        new_password => 'password',
        confirm_new_password => 'password',
    }),
];
