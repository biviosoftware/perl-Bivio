# Copyright (c) 2005-2008 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request();
my($email) = ShellUtil_SQL()->DEMO_EMAIL;
my($name) = ShellUtil_SQL()->DEMO;
my($id) = unauth_model(RealmOwner => {name => $name})->get('realm_id');
my($_RT) = __PACKAGE__->use('Auth.RealmType');
[
    {
	object => [req()],
	compute_return => sub {
	    return [shift->get('object')->unsafe_get('name')];
	},
    } => [
	unauth_load_by_email => [
	    $email => $name,
	    [$email, realm_type => $_RT->USER] => $name,
	    [$email, realm_type => $_RT->CLUB] => [undef],
	    [$email, {realm_type => $_RT->USER}] => $name,
	    [$email, {realm_type => $_RT->CLUB}] => [undef],
	],
	unauth_load_by_id_or_name_or_die => [
	    not_a_user => MODEL_NOT_FOUND(),
	    $name => $name,
	    $id => $name,
	],
	unauth_load_by_email_id_or_name => [
	    not_a_user => [undef],
	    $name => $name,
	    $id => $name,
	    $email => $name,
	],
	create => [
	    [{
		realm_id => '12345',
		name => '',
		display_name => '',
		realm_type => $_RT->CLUB,
	    }] => DB_ERROR(),
	],
	put_on_request => [
	    [1] => undef,
	],
	sub {
	    req()->clear_nondurable_state;
	    req('Model.RealmOwner');
	    return;
	} => undef,
    ],
];
