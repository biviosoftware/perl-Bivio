# Copyright (c) 2009 bivio Software, Inc.  All Rights Reserved.
# $Id$
Request('initialize_fully');
[
    class() => [
	{
	    method => 'execute',
	    compute_params => sub {
		my(undef, $params) = @_;
		req()->set_realm('guest');
		req()->put(path_info => $params->[0]);
		return [req()];
	    },
	    compute_return => sub {
		my($reply) = req('reply');
		return [$reply->get_output_type, $reply->get_output];
	    },
	} => [
	    'private' => ['text/plain', qr{^@{[class()]}#1\n\S+ /private/file.html\n\S+ /private/image.gif$}s],
	    'private/file.html' => ['text/html', qr{^<html>.*</html>}iss],
	],
	remote_list => [
	    sub {
		req()->set_realm('remote_file_copy_bunit');
		return [model('RemoteFileCopyList', {})];
	    } => [
		{map((lc($_) => [qr{^\S+$}, $_]),
	            map("/AnyFolder/file$_", 1..4))},
		undef,
	    ],
	],
	local_list => [
	    sub {
		model('RealmFile', {path => '/AnyFolder/file1'})->delete;
		model('RealmFile', {path => '/AnyFolder/file2'})
		    ->update_with_content({}, \('changed file2'));
		model('RealmFile')->create_with_content({
		    path => '/AnyFolder/file5',
		    user_id => realm_id('btest_read'),
		}, \('file5'));
		return [model('RemoteFileCopyList', {})];
	    } => [
		{map((lc($_) => [qr{^\S+$}, $_]),
	            map("/AnyFolder/file$_", 2..5))},
	    ],
	],
	diff_lists => [
	    sub {[model('RemoteFileCopyList', {})]} => [{
		to_delete => FilePathArray('/AnyFolder/file5'),
		to_create => FilePathArray('/AnyFolder/file1'),
		to_update => FilePathArray('/AnyFolder/file2'),
	    }],
	],
    ],
];
